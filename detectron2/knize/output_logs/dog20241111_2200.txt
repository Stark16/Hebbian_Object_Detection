Script started on 2024-11-11 22:00:23-06:00 [TERM="screen.xterm-256color" TTY="/dev/pts/83" COLUMNS="156" LINES="41"]
[01;32mjknize@aiscalar[00m:[01;34m~/main/repo/CSC578[00m$ pytho[K[K[K[K[KUCD[K[K[KCUDA_VISIBLE_DIE[K[KEVICES=3 python
Python 3.8.10 (default, Nov 22 2023, 10:22:35) 
[GCC 9.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import os
>>> os.chdir('/home/jknize/main/repo/CSC578/detectron2')
>>> from detectron2.data.datasets import register_coco_instances
>>> from detectron2.data import DatasetCatalog, MetadataCatalog
>>> register_coco_instances("coco_train_dog", {}, "../datasets/coco/annotations/dog_instances_train2017.json", "../datasets/coco/train2017_dog")
>>> register_coco_instances("coco_val_dog", {}, "../datasets/coco/annotations/dog_instances_val2017.json", "../datasets/coco/val2017_dog")
>>> my_dataset_metadata = MetadataCatalog.get("coco_train_dog")
>>> my_dataset_metadata.thing_classes = ["dog"]
>>> dataset_dicts = DatasetCatalog.get("coco_train_dog")
>>> from detectron2.config import get_cfg
>>> from detectron2.engine import DefaultTrainer, DefaultPredictor
>>> import torch
>>> cfg = get_cfg()
>>> cfg.merge_from_file("configs/COCO-Detection/faster_rcnn_R_50_FPN_3x.yaml") #ImageNet pre-trained
>>> cfg.OUTPUT_DIR = "knize/output/dog20241111"
>>> cfg.MODEL.ROI_HEADS.SCORE_THRESH_TEST = 0.7
>>> cfg.DATASETS.TRAIN = ("coco_train_dog",)
>>> cfg.DATASETS.TEST = ("coco_val_dog",)
>>> cfg.MODEL.ROI_HEADS.NUM_CLASSES = 1
>>> cfg.MODEL.ROI_HEADS.NMS_THRESH_TEST = 0.5
>>> cfg.SOLVER.BASE_LR = 0.0025
>>> cfg.SOLVER.IMS_PER_BATCH = 2[K8
>>> cfg.SOLVER.MAX_ITER = 5000
>>> cfg.SOLVER.CHECKPOINT_PERIOD = 1000
>>> cfg.TEST.EVAL_PERIOD = 1000
>>> cfg.MODEL.DEVICE = 'cuda'[C[C[C[C[C[C[C[CTEST.EVAL_PERIOD = 1000[C[C[C[C[C[C[C[C[8@SOLVER.CHECKPOINT[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[9PMAX_ITER = 5000IMS_PER_BATCH = 8[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2PMAX_ITER = 5000CHECKPOINT_PERIOD = 1000[C[C[C[C[C[C[C[C[8PTEST.EVAL[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2PMODEL.DEVICE = 'cuda'
>>> cfg.MODEL.DEVICE = 'cuda'[C[C[C[C[C[C[C[CTEST.EVAL_PERIOD = 1000[C[C[C[C[C[C[C[C[8@SOLVER.CHECKPOINT[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[9PMAX_ITER = 5000[1P0001000[C[C[C0[C[C[C # changed mind
>>> trainer = DefaultTrainer(cfg)
[32m[11/11 22:05:56 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
  )
)
[32m[11/11 22:05:56 d2.data.datasets.coco]: [0mLoaded 4385 images in COCO format from ../datasets/coco/annotations/dog_instances_train2017.json
[32m[11/11 22:05:56 d2.data.build]: [0mRemoved 0 images with no usable annotations. 4385 images left.
[32m[11/11 22:05:56 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|    dog     | 5500         |
|            |              |[0m
[32m[11/11 22:05:56 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[11/11 22:05:56 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/11 22:05:56 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[32m[11/11 22:05:56 d2.data.common]: [0mSerializing 4385 elements to byte tensors and concatenating them all ...
[32m[11/11 22:05:56 d2.data.common]: [0mSerialized dataset takes 6.35 MiB
[32m[11/11 22:05:56 d2.data.build]: [0mMaking batched data loader with batch_size=8
[5m[31mWARNING[0m [32m[11/11 22:05:56 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
>>> trainer = DefaultTrainer(cfg)[C[C[C[Ccfg.SOLVER.MAX_ITER = 10000 # changed mind[C[C[C[C[C[C[C[C[17PMODEL.DEVICE = 'cuda'[C[C[C[C[C[C[C[CTEST.EVAL_PERIOD = 1000[C[C[C[C[C[C[C[C[8@SOLVER.CHECKPOINT[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[9PMAX_ITER = 5000CHECKPOINT_PERIOD = 1000[C[C[C[C[C[C[C[C[8PTEST.EVAL[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2PMODEL.DEVICE = 'cuda'[C[C[C[C[C[C[C[CSOLVER.MAX_ITER = 10000 # changed mind[C[C[C[C[13Ptrainer = DefaultTrainer(cfg)[C[C[C[C[Ktrainer.resume_or_load(resume=False)
[32m[11/11 22:08:05 d2.checkpoint.detection_checkpoint]: [0m[DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[32m[11/11 22:08:05 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/11 22:08:05 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up - Total num: 54
Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral2.{bias, weight}[0m
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output2.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_head.fc1.{bias, weight}[0m
[34mroi_heads.box_head.fc2.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
>>> trainer.model.to(cfg.MODEL.DEVICE)
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
  )
)
>>> trainer.train()
[32m[11/11 22:08:21 d2.engine.train_loop]: [0mStarting training from iteration 0
/home/jknize/.local/lib/python3.8/site-packages/torch/functional.py:507: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3549.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
[32m[11/11 22:08:29 d2.utils.events]: [0m eta: 1:07:09  iter: 19  total_loss: 1.207  loss_cls: 0.4675  loss_box_reg: 0.006874  loss_rpn_cls: 0.7133  loss_rpn_loc: 0.01141    time: 0.3936  last_time: 0.4116  data_time: 0.0463  last_data_time: 0.0060   lr: 4.9952e-05  max_mem: 8009M
No protocol specified
[32m[11/11 22:08:40 d2.utils.events]: [0m eta: 1:05:27  iter: 39  total_loss: 0.6985  loss_cls: 0.03218  loss_box_reg: 0.00587  loss_rpn_cls: 0.6487  loss_rpn_loc: 0.01683    time: 0.3915  last_time: 0.4170  data_time: 0.0351  last_data_time: 0.0424   lr: 9.9902e-05  max_mem: 8009M
[32m[11/11 22:08:48 d2.utils.events]: [0m eta: 1:04:06  iter: 59  total_loss: 0.5924  loss_cls: 0.03379  loss_box_reg: 0.01189  loss_rpn_cls: 0.5284  loss_rpn_loc: 0.01638    time: 0.3857  last_time: 0.3580  data_time: 0.0346  last_data_time: 0.0175   lr: 0.00014985  max_mem: 8010M
[32m[11/11 22:08:55 d2.utils.events]: [0m eta: 1:03:48  iter: 79  total_loss: 0.4293  loss_cls: 0.04686  loss_box_reg: 0.01635  loss_rpn_cls: 0.3499  loss_rpn_loc: 0.0118    time: 0.3848  last_time: 0.3477  data_time: 0.0322  last_data_time: 0.0585   lr: 0.0001998  max_mem: 8010M
[32m[11/11 22:09:03 d2.utils.events]: [0m eta: 1:03:18  iter: 99  total_loss: 0.2646  loss_cls: 0.04104  loss_box_reg: 0.01524  loss_rpn_cls: 0.1899  loss_rpn_loc: 0.01608    time: 0.3833  last_time: 0.3867  data_time: 0.0446  last_data_time: 0.0867   lr: 0.00024975  max_mem: 8010M
[32m[11/11 22:09:10 d2.utils.events]: [0m eta: 1:02:54  iter: 119  total_loss: 0.1924  loss_cls: 0.04054  loss_box_reg: 0.02002  loss_rpn_cls: 0.1079  loss_rpn_loc: 0.01336    time: 0.3805  last_time: 0.4041  data_time: 0.0339  last_data_time: 0.0524   lr: 0.0002997  max_mem: 8014M
[32m[11/11 22:09:18 d2.utils.events]: [0m eta: 1:02:31  iter: 139  total_loss: 0.1939  loss_cls: 0.0522  loss_box_reg: 0.03489  loss_rpn_cls: 0.08437  loss_rpn_loc: 0.01811    time: 0.3809  last_time: 0.3169  data_time: 0.0318  last_data_time: 0.0116   lr: 0.00034965  max_mem: 8014M
[32m[11/11 22:09:25 d2.utils.events]: [0m eta: 1:01:51  iter: 159  total_loss: 0.1833  loss_cls: 0.05816  loss_box_reg: 0.04154  loss_rpn_cls: 0.06752  loss_rpn_loc: 0.01382    time: 0.3788  last_time: 0.3866  data_time: 0.0322  last_data_time: 0.0349   lr: 0.0003996  max_mem: 8014M
[32m[11/11 22:09:33 d2.utils.events]: [0m eta: 1:01:43  iter: 179  total_loss: 0.196  loss_cls: 0.06128  loss_box_reg: 0.05044  loss_rpn_cls: 0.06056  loss_rpn_loc: 0.01598    time: 0.3785  last_time: 0.3530  data_time: 0.0339  last_data_time: 0.0073   lr: 0.00044955  max_mem: 8014M
[32m[11/11 22:09:40 d2.utils.events]: [0m eta: 1:01:09  iter: 199  total_loss: 0.1994  loss_cls: 0.06701  loss_box_reg: 0.04854  loss_rpn_cls: 0.05728  loss_rpn_loc: 0.0149    time: 0.3769  last_time: 0.3653  data_time: 0.0298  last_data_time: 0.0277   lr: 0.0004995  max_mem: 8014M
[32m[11/11 22:09:48 d2.utils.events]: [0m eta: 1:01:29  iter: 219  total_loss: 0.213  loss_cls: 0.07433  loss_box_reg: 0.07189  loss_rpn_cls: 0.05002  loss_rpn_loc: 0.0108    time: 0.3784  last_time: 0.3680  data_time: 0.0337  last_data_time: 0.0072   lr: 0.00054945  max_mem: 8014M
[32m[11/11 22:09:55 d2.utils.events]: [0m eta: 1:01:13  iter: 239  total_loss: 0.2103  loss_cls: 0.07404  loss_box_reg: 0.06924  loss_rpn_cls: 0.05057  loss_rpn_loc: 0.01672    time: 0.3780  last_time: 0.3700  data_time: 0.0378  last_data_time: 0.0139   lr: 0.0005994  max_mem: 8014M
[32m[11/11 22:10:02 d2.utils.events]: [0m eta: 1:00:47  iter: 259  total_loss: 0.2156  loss_cls: 0.07679  loss_box_reg: 0.07684  loss_rpn_cls: 0.04461  loss_rpn_loc: 0.01197    time: 0.3766  last_time: 0.2856  data_time: 0.0302  last_data_time: 0.0080   lr: 0.00064935  max_mem: 8014M
[32m[11/11 22:10:10 d2.utils.events]: [0m eta: 1:00:31  iter: 279  total_loss: 0.2196  loss_cls: 0.07805  loss_box_reg: 0.07396  loss_rpn_cls: 0.04361  loss_rpn_loc: 0.01272    time: 0.3762  last_time: 0.3629  data_time: 0.0345  last_data_time: 0.0241   lr: 0.0006993  max_mem: 8014M
[32m[11/11 22:10:17 d2.utils.events]: [0m eta: 1:00:24  iter: 299  total_loss: 0.2218  loss_cls: 0.07169  loss_box_reg: 0.0752  loss_rpn_cls: 0.04416  loss_rpn_loc: 0.01481    time: 0.3765  last_time: 0.3646  data_time: 0.0346  last_data_time: 0.0298   lr: 0.00074925  max_mem: 8014M
[32m[11/11 22:10:25 d2.utils.events]: [0m eta: 1:00:18  iter: 319  total_loss: 0.2267  loss_cls: 0.08005  loss_box_reg: 0.07962  loss_rpn_cls: 0.03824  loss_rpn_loc: 0.0142    time: 0.3773  last_time: 0.3674  data_time: 0.0369  last_data_time: 0.0246   lr: 0.0007992  max_mem: 8015M
[32m[11/11 22:10:33 d2.utils.events]: [0m eta: 1:00:21  iter: 339  total_loss: 0.2284  loss_cls: 0.07958  loss_box_reg: 0.08739  loss_rpn_cls: 0.0349  loss_rpn_loc: 0.01228    time: 0.3779  last_time: 0.3596  data_time: 0.0312  last_data_time: 0.0157   lr: 0.00084915  max_mem: 8015M
[32m[11/11 22:10:40 d2.utils.events]: [0m eta: 1:00:13  iter: 359  total_loss: 0.2323  loss_cls: 0.08461  loss_box_reg: 0.09418  loss_rpn_cls: 0.03722  loss_rpn_loc: 0.01405    time: 0.3778  last_time: 0.3738  data_time: 0.0396  last_data_time: 0.0148   lr: 0.0008991  max_mem: 8015M
[32m[11/11 22:10:48 d2.utils.events]: [0m eta: 1:00:02  iter: 379  total_loss: 0.2229  loss_cls: 0.0749  loss_box_reg: 0.08664  loss_rpn_cls: 0.04216  loss_rpn_loc: 0.01477    time: 0.3773  last_time: 0.3150  data_time: 0.0339  last_data_time: 0.0379   lr: 0.00094905  max_mem: 8015M
[32m[11/11 22:10:56 d2.utils.events]: [0m eta: 1:00:09  iter: 399  total_loss: 0.2206  loss_cls: 0.07894  loss_box_reg: 0.09821  loss_rpn_cls: 0.03328  loss_rpn_loc: 0.01266    time: 0.3777  last_time: 0.3795  data_time: 0.0326  last_data_time: 0.0664   lr: 0.000999  max_mem: 8015M
[32m[11/11 22:11:03 d2.utils.events]: [0m eta: 1:00:13  iter: 419  total_loss: 0.2352  loss_cls: 0.0845  loss_box_reg: 0.09966  loss_rpn_cls: 0.03499  loss_rpn_loc: 0.01574    time: 0.3778  last_time: 0.3959  data_time: 0.0317  last_data_time: 0.0340   lr: 0.001049  max_mem: 8015M
[32m[11/11 22:11:11 d2.utils.events]: [0m eta: 0:59:56  iter: 439  total_loss: 0.2464  loss_cls: 0.08148  loss_box_reg: 0.1128  loss_rpn_cls: 0.03156  loss_rpn_loc: 0.01501    time: 0.3774  last_time: 0.3447  data_time: 0.0301  last_data_time: 0.0041   lr: 0.0010989  max_mem: 8015M
[32m[11/11 22:11:18 d2.utils.events]: [0m eta: 0:59:45  iter: 459  total_loss: 0.2097  loss_cls: 0.0733  loss_box_reg: 0.1022  loss_rpn_cls: 0.02833  loss_rpn_loc: 0.01476    time: 0.3771  last_time: 0.3737  data_time: 0.0364  last_data_time: 0.0270   lr: 0.0011489  max_mem: 8015M
[32m[11/11 22:11:25 d2.utils.events]: [0m eta: 0:59:39  iter: 479  total_loss: 0.2089  loss_cls: 0.07094  loss_box_reg: 0.09645  loss_rpn_cls: 0.02882  loss_rpn_loc: 0.01483    time: 0.3767  last_time: 0.3987  data_time: 0.0351  last_data_time: 0.0657   lr: 0.0011988  max_mem: 8015M
[32m[11/11 22:11:33 d2.utils.events]: [0m eta: 0:59:24  iter: 499  total_loss: 0.2218  loss_cls: 0.07331  loss_box_reg: 0.1047  loss_rpn_cls: 0.02455  loss_rpn_loc: 0.01626    time: 0.3763  last_time: 0.3888  data_time: 0.0340  last_data_time: 0.0298   lr: 0.0012488  max_mem: 8015M
[32m[11/11 22:11:40 d2.utils.events]: [0m eta: 0:59:19  iter: 519  total_loss: 0.1983  loss_cls: 0.0712  loss_box_reg: 0.08981  loss_rpn_cls: 0.02512  loss_rpn_loc: 0.0128    time: 0.3761  last_time: 0.3600  data_time: 0.0309  last_data_time: 0.0585   lr: 0.0012987  max_mem: 8015M
[32m[11/11 22:11:48 d2.utils.events]: [0m eta: 0:59:11  iter: 539  total_loss: 0.2049  loss_cls: 0.07697  loss_box_reg: 0.09694  loss_rpn_cls: 0.02074  loss_rpn_loc: 0.01451    time: 0.3763  last_time: 0.3596  data_time: 0.0383  last_data_time: 0.0245   lr: 0.0013487  max_mem: 8015M
[32m[11/11 22:11:55 d2.utils.events]: [0m eta: 0:59:01  iter: 559  total_loss: 0.1883  loss_cls: 0.07116  loss_box_reg: 0.08546  loss_rpn_cls: 0.02115  loss_rpn_loc: 0.01314    time: 0.3764  last_time: 0.3690  data_time: 0.0345  last_data_time: 0.0089   lr: 0.0013986  max_mem: 8015M
[32m[11/11 22:12:03 d2.utils.events]: [0m eta: 0:58:52  iter: 579  total_loss: 0.1975  loss_cls: 0.07359  loss_box_reg: 0.08674  loss_rpn_cls: 0.01874  loss_rpn_loc: 0.01494    time: 0.3762  last_time: 0.4132  data_time: 0.0328  last_data_time: 0.0584   lr: 0.0014486  max_mem: 8015M
[32m[11/11 22:12:10 d2.utils.events]: [0m eta: 0:58:36  iter: 599  total_loss: 0.2048  loss_cls: 0.07242  loss_box_reg: 0.1034  loss_rpn_cls: 0.01608  loss_rpn_loc: 0.01293    time: 0.3759  last_time: 0.3530  data_time: 0.0312  last_data_time: 0.0335   lr: 0.0014985  max_mem: 8015M
[32m[11/11 22:12:18 d2.utils.events]: [0m eta: 0:58:26  iter: 619  total_loss: 0.2163  loss_cls: 0.07838  loss_box_reg: 0.09836  loss_rpn_cls: 0.01893  loss_rpn_loc: 0.01384    time: 0.3759  last_time: 0.3158  data_time: 0.0332  last_data_time: 0.0296   lr: 0.0015485  max_mem: 8015M
[32m[11/11 22:12:25 d2.utils.events]: [0m eta: 0:58:21  iter: 639  total_loss: 0.2179  loss_cls: 0.0807  loss_box_reg: 0.1042  loss_rpn_cls: 0.01753  loss_rpn_loc: 0.01315    time: 0.3757  last_time: 0.3096  data_time: 0.0369  last_data_time: 0.0278   lr: 0.0015984  max_mem: 8015M
[32m[11/11 22:12:32 d2.utils.events]: [0m eta: 0:58:18  iter: 659  total_loss: 0.2061  loss_cls: 0.0774  loss_box_reg: 0.1032  loss_rpn_cls: 0.01469  loss_rpn_loc: 0.01537    time: 0.3755  last_time: 0.3644  data_time: 0.0356  last_data_time: 0.0374   lr: 0.0016484  max_mem: 8015M
[32m[11/11 22:12:40 d2.utils.events]: [0m eta: 0:58:09  iter: 679  total_loss: 0.2281  loss_cls: 0.08678  loss_box_reg: 0.1114  loss_rpn_cls: 0.01684  loss_rpn_loc: 0.01357    time: 0.3753  last_time: 0.4177  data_time: 0.0312  last_data_time: 0.0766   lr: 0.0016983  max_mem: 8015M
[32m[11/11 22:12:47 d2.utils.events]: [0m eta: 0:58:02  iter: 699  total_loss: 0.2093  loss_cls: 0.07682  loss_box_reg: 0.09745  loss_rpn_cls: 0.0163  loss_rpn_loc: 0.01112    time: 0.3755  last_time: 0.3705  data_time: 0.0335  last_data_time: 0.0337   lr: 0.0017483  max_mem: 8015M
[32m[11/11 22:12:55 d2.utils.events]: [0m eta: 0:57:57  iter: 719  total_loss: 0.2084  loss_cls: 0.07309  loss_box_reg: 0.09881  loss_rpn_cls: 0.01267  loss_rpn_loc: 0.01292    time: 0.3754  last_time: 0.4115  data_time: 0.0380  last_data_time: 0.0448   lr: 0.0017982  max_mem: 8015M
[32m[11/11 22:13:02 d2.utils.events]: [0m eta: 0:57:51  iter: 739  total_loss: 0.2037  loss_cls: 0.07659  loss_box_reg: 0.09873  loss_rpn_cls: 0.01604  loss_rpn_loc: 0.013    time: 0.3755  last_time: 0.3262  data_time: 0.0362  last_data_time: 0.0334   lr: 0.0018482  max_mem: 8015M
[32m[11/11 22:13:10 d2.utils.events]: [0m eta: 0:57:45  iter: 759  total_loss: 0.2219  loss_cls: 0.07802  loss_box_reg: 0.09693  loss_rpn_cls: 0.01505  loss_rpn_loc: 0.0142    time: 0.3756  last_time: 0.4434  data_time: 0.0317  last_data_time: 0.0312   lr: 0.0018981  max_mem: 8015M
[32m[11/11 22:13:18 d2.utils.events]: [0m eta: 0:57:35  iter: 779  total_loss: 0.2166  loss_cls: 0.07637  loss_box_reg: 0.1052  loss_rpn_cls: 0.01342  loss_rpn_loc: 0.01217    time: 0.3756  last_time: 0.4304  data_time: 0.0363  last_data_time: 0.0833   lr: 0.0019481  max_mem: 8015M
[32m[11/11 22:13:25 d2.utils.events]: [0m eta: 0:57:32  iter: 799  total_loss: 0.2121  loss_cls: 0.07995  loss_box_reg: 0.1015  loss_rpn_cls: 0.01612  loss_rpn_loc: 0.0125    time: 0.3759  last_time: 0.4132  data_time: 0.0371  last_data_time: 0.0817   lr: 0.001998  max_mem: 8015M
[32m[11/11 22:13:33 d2.utils.events]: [0m eta: 0:57:25  iter: 819  total_loss: 0.2155  loss_cls: 0.08673  loss_box_reg: 0.1014  loss_rpn_cls: 0.01617  loss_rpn_loc: 0.01333    time: 0.3759  last_time: 0.3549  data_time: 0.0318  last_data_time: 0.0451   lr: 0.002048  max_mem: 8015M
[32m[11/11 22:13:40 d2.utils.events]: [0m eta: 0:57:18  iter: 839  total_loss: 0.2014  loss_cls: 0.07949  loss_box_reg: 0.1004  loss_rpn_cls: 0.01333  loss_rpn_loc: 0.01256    time: 0.3758  last_time: 0.4116  data_time: 0.0359  last_data_time: 0.0639   lr: 0.0020979  max_mem: 8015M
[32m[11/11 22:13:48 d2.utils.events]: [0m eta: 0:57:10  iter: 859  total_loss: 0.188  loss_cls: 0.06946  loss_box_reg: 0.09594  loss_rpn_cls: 0.00984  loss_rpn_loc: 0.01091    time: 0.3757  last_time: 0.3987  data_time: 0.0330  last_data_time: 0.0405   lr: 0.0021479  max_mem: 8015M
[32m[11/11 22:13:55 d2.utils.events]: [0m eta: 0:56:59  iter: 879  total_loss: 0.1954  loss_cls: 0.07158  loss_box_reg: 0.09577  loss_rpn_cls: 0.01578  loss_rpn_loc: 0.01273    time: 0.3754  last_time: 0.3657  data_time: 0.0375  last_data_time: 0.0086   lr: 0.0021978  max_mem: 8015M
[32m[11/11 22:14:02 d2.utils.events]: [0m eta: 0:56:49  iter: 899  total_loss: 0.2071  loss_cls: 0.07785  loss_box_reg: 0.1005  loss_rpn_cls: 0.01224  loss_rpn_loc: 0.01128    time: 0.3754  last_time: 0.3371  data_time: 0.0319  last_data_time: 0.0287   lr: 0.0022478  max_mem: 8015M
[32m[11/11 22:14:10 d2.utils.events]: [0m eta: 0:56:41  iter: 919  total_loss: 0.1986  loss_cls: 0.07149  loss_box_reg: 0.09577  loss_rpn_cls: 0.01269  loss_rpn_loc: 0.009116    time: 0.3753  last_time: 0.3687  data_time: 0.0339  last_data_time: 0.0646   lr: 0.0022977  max_mem: 8015M
[32m[11/11 22:14:17 d2.utils.events]: [0m eta: 0:56:34  iter: 939  total_loss: 0.2083  loss_cls: 0.07308  loss_box_reg: 0.1086  loss_rpn_cls: 0.01115  loss_rpn_loc: 0.01235    time: 0.3753  last_time: 0.4034  data_time: 0.0302  last_data_time: 0.0245   lr: 0.0023477  max_mem: 8015M
[32m[11/11 22:14:25 d2.utils.events]: [0m eta: 0:56:27  iter: 959  total_loss: 0.2399  loss_cls: 0.08508  loss_box_reg: 0.1226  loss_rpn_cls: 0.01098  loss_rpn_loc: 0.01269    time: 0.3753  last_time: 0.4017  data_time: 0.0335  last_data_time: 0.0279   lr: 0.0023976  max_mem: 8015M
[32m[11/11 22:14:32 d2.utils.events]: [0m eta: 0:56:20  iter: 979  total_loss: 0.1841  loss_cls: 0.06899  loss_box_reg: 0.09711  loss_rpn_cls: 0.01043  loss_rpn_loc: 0.00982    time: 0.3753  last_time: 0.3419  data_time: 0.0315  last_data_time: 0.0634   lr: 0.0024476  max_mem: 8015M
[32m[11/11 22:14:41 d2.data.datasets.coco]: [0mLoaded 177 images in COCO format from ../datasets/coco/annotations/dog_instances_val2017.json
[32m[11/11 22:14:41 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|    dog     | 218          |
|            |              |[0m
[32m[11/11 22:14:41 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/11 22:14:41 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[32m[11/11 22:14:41 d2.data.common]: [0mSerializing 177 elements to byte tensors and concatenating them all ...
[32m[11/11 22:14:41 d2.data.common]: [0mSerialized dataset takes 0.24 MiB
[5m[31mWARNING[0m [32m[11/11 22:14:41 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/11 22:14:41 d2.utils.events]: [0m eta: 0:56:17  iter: 999  total_loss: 0.2019  loss_cls: 0.08177  loss_box_reg: 0.1016  loss_rpn_cls: 0.01057  loss_rpn_loc: 0.01053    time: 0.3755  last_time: 0.4085  data_time: 0.0344  last_data_time: 0.0479   lr: 0.0024975  max_mem: 8015M
[32m[11/11 22:14:48 d2.utils.events]: [0m eta: 0:56:06  iter: 1019  total_loss: 0.1954  loss_cls: 0.07078  loss_box_reg: 0.1006  loss_rpn_cls: 0.01097  loss_rpn_loc: 0.01321    time: 0.3755  last_time: 0.3993  data_time: 0.0303  last_data_time: 0.0338   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:14:56 d2.utils.events]: [0m eta: 0:55:57  iter: 1039  total_loss: 0.1823  loss_cls: 0.06808  loss_box_reg: 0.09123  loss_rpn_cls: 0.008917  loss_rpn_loc: 0.01075    time: 0.3753  last_time: 0.3384  data_time: 0.0322  last_data_time: 0.0341   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:15:03 d2.utils.events]: [0m eta: 0:55:53  iter: 1059  total_loss: 0.1945  loss_cls: 0.0735  loss_box_reg: 0.09594  loss_rpn_cls: 0.01185  loss_rpn_loc: 0.01189    time: 0.3754  last_time: 0.3914  data_time: 0.0303  last_data_time: 0.0375   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:15:11 d2.utils.events]: [0m eta: 0:55:44  iter: 1079  total_loss: 0.1944  loss_cls: 0.06953  loss_box_reg: 0.08557  loss_rpn_cls: 0.01409  loss_rpn_loc: 0.01071    time: 0.3754  last_time: 0.3732  data_time: 0.0299  last_data_time: 0.0030   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:15:18 d2.utils.events]: [0m eta: 0:55:37  iter: 1099  total_loss: 0.1977  loss_cls: 0.07582  loss_box_reg: 0.1023  loss_rpn_cls: 0.01167  loss_rpn_loc: 0.01059    time: 0.3754  last_time: 0.3476  data_time: 0.0320  last_data_time: 0.0286   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:15:26 d2.utils.events]: [0m eta: 0:55:30  iter: 1119  total_loss: 0.1934  loss_cls: 0.06907  loss_box_reg: 0.1052  loss_rpn_cls: 0.009311  loss_rpn_loc: 0.009041    time: 0.3754  last_time: 0.3111  data_time: 0.0338  last_data_time: 0.0239   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:15:33 d2.utils.events]: [0m eta: 0:55:21  iter: 1139  total_loss: 0.2107  loss_cls: 0.07659  loss_box_reg: 0.1019  loss_rpn_cls: 0.0113  loss_rpn_loc: 0.01245    time: 0.3753  last_time: 0.3825  data_time: 0.0328  last_data_time: 0.0580   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:15:40 d2.utils.events]: [0m eta: 0:55:15  iter: 1159  total_loss: 0.1952  loss_cls: 0.07122  loss_box_reg: 0.1107  loss_rpn_cls: 0.009201  loss_rpn_loc: 0.01116    time: 0.3751  last_time: 0.3852  data_time: 0.0315  last_data_time: 0.0247   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:15:48 d2.utils.events]: [0m eta: 0:55:09  iter: 1179  total_loss: 0.2005  loss_cls: 0.07306  loss_box_reg: 0.1009  loss_rpn_cls: 0.008832  loss_rpn_loc: 0.01055    time: 0.3751  last_time: 0.3839  data_time: 0.0313  last_data_time: 0.0510   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:15:55 d2.utils.events]: [0m eta: 0:55:01  iter: 1199  total_loss: 0.1936  loss_cls: 0.07291  loss_box_reg: 0.1083  loss_rpn_cls: 0.01221  loss_rpn_loc: 0.01062    time: 0.3748  last_time: 0.3733  data_time: 0.0301  last_data_time: 0.0334   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:16:03 d2.utils.events]: [0m eta: 0:54:50  iter: 1219  total_loss: 0.2057  loss_cls: 0.07651  loss_box_reg: 0.1132  loss_rpn_cls: 0.009504  loss_rpn_loc: 0.01186    time: 0.3748  last_time: 0.3686  data_time: 0.0347  last_data_time: 0.0148   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:16:10 d2.utils.events]: [0m eta: 0:54:41  iter: 1239  total_loss: 0.1951  loss_cls: 0.07664  loss_box_reg: 0.1019  loss_rpn_cls: 0.008582  loss_rpn_loc: 0.01015    time: 0.3746  last_time: 0.3627  data_time: 0.0325  last_data_time: 0.0060   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:16:17 d2.utils.events]: [0m eta: 0:54:37  iter: 1259  total_loss: 0.2049  loss_cls: 0.0772  loss_box_reg: 0.1078  loss_rpn_cls: 0.01138  loss_rpn_loc: 0.01131    time: 0.3746  last_time: 0.4176  data_time: 0.0369  last_data_time: 0.0554   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:16:25 d2.utils.events]: [0m eta: 0:54:30  iter: 1279  total_loss: 0.1975  loss_cls: 0.06872  loss_box_reg: 0.1036  loss_rpn_cls: 0.009883  loss_rpn_loc: 0.01087    time: 0.3746  last_time: 0.3474  data_time: 0.0313  last_data_time: 0.0264   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:16:33 d2.utils.events]: [0m eta: 0:54:25  iter: 1299  total_loss: 0.2142  loss_cls: 0.07739  loss_box_reg: 0.1061  loss_rpn_cls: 0.01171  loss_rpn_loc: 0.01088    time: 0.3748  last_time: 0.4105  data_time: 0.0317  last_data_time: 0.0339   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:16:40 d2.utils.events]: [0m eta: 0:54:18  iter: 1319  total_loss: 0.2061  loss_cls: 0.07181  loss_box_reg: 0.1117  loss_rpn_cls: 0.0106  loss_rpn_loc: 0.01018    time: 0.3750  last_time: 0.3776  data_time: 0.0369  last_data_time: 0.0316   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:16:48 d2.utils.events]: [0m eta: 0:54:08  iter: 1339  total_loss: 0.1881  loss_cls: 0.06657  loss_box_reg: 0.09326  loss_rpn_cls: 0.01059  loss_rpn_loc: 0.01052    time: 0.3750  last_time: 0.3449  data_time: 0.0362  last_data_time: 0.0321   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:16:56 d2.utils.events]: [0m eta: 0:54:02  iter: 1359  total_loss: 0.1937  loss_cls: 0.07323  loss_box_reg: 0.1058  loss_rpn_cls: 0.01098  loss_rpn_loc: 0.01142    time: 0.3751  last_time: 0.3745  data_time: 0.0348  last_data_time: 0.0895   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:17:03 d2.utils.events]: [0m eta: 0:53:54  iter: 1379  total_loss: 0.1841  loss_cls: 0.07138  loss_box_reg: 0.0954  loss_rpn_cls: 0.009242  loss_rpn_loc: 0.009521    time: 0.3750  last_time: 0.2983  data_time: 0.0300  last_data_time: 0.0085   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:17:11 d2.utils.events]: [0m eta: 0:53:47  iter: 1399  total_loss: 0.214  loss_cls: 0.08241  loss_box_reg: 0.11  loss_rpn_cls: 0.01047  loss_rpn_loc: 0.01016    time: 0.3752  last_time: 0.3673  data_time: 0.0325  last_data_time: 0.0121   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:17:18 d2.utils.events]: [0m eta: 0:53:39  iter: 1419  total_loss: 0.1904  loss_cls: 0.07025  loss_box_reg: 0.09756  loss_rpn_cls: 0.008816  loss_rpn_loc: 0.009343    time: 0.3752  last_time: 0.3758  data_time: 0.0299  last_data_time: 0.0133   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:17:26 d2.utils.events]: [0m eta: 0:53:32  iter: 1439  total_loss: 0.1944  loss_cls: 0.07314  loss_box_reg: 0.1085  loss_rpn_cls: 0.006841  loss_rpn_loc: 0.008011    time: 0.3751  last_time: 0.3698  data_time: 0.0336  last_data_time: 0.0293   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:17:33 d2.utils.events]: [0m eta: 0:53:25  iter: 1459  total_loss: 0.1978  loss_cls: 0.0778  loss_box_reg: 0.1051  loss_rpn_cls: 0.008735  loss_rpn_loc: 0.008355    time: 0.3751  last_time: 0.4343  data_time: 0.0351  last_data_time: 0.0800   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:17:41 d2.utils.events]: [0m eta: 0:53:18  iter: 1479  total_loss: 0.2098  loss_cls: 0.0748  loss_box_reg: 0.1125  loss_rpn_cls: 0.009022  loss_rpn_loc: 0.009639    time: 0.3751  last_time: 0.3956  data_time: 0.0347  last_data_time: 0.0778   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:17:48 d2.utils.events]: [0m eta: 0:53:11  iter: 1499  total_loss: 0.1909  loss_cls: 0.07706  loss_box_reg: 0.09854  loss_rpn_cls: 0.009858  loss_rpn_loc: 0.01179    time: 0.3751  last_time: 0.3901  data_time: 0.0308  last_data_time: 0.0472   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:17:56 d2.utils.events]: [0m eta: 0:53:03  iter: 1519  total_loss: 0.2044  loss_cls: 0.07775  loss_box_reg: 0.1133  loss_rpn_cls: 0.006209  loss_rpn_loc: 0.00753    time: 0.3752  last_time: 0.4152  data_time: 0.0356  last_data_time: 0.0368   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:18:03 d2.utils.events]: [0m eta: 0:52:55  iter: 1539  total_loss: 0.1992  loss_cls: 0.0714  loss_box_reg: 0.1036  loss_rpn_cls: 0.009464  loss_rpn_loc: 0.01261    time: 0.3751  last_time: 0.4257  data_time: 0.0349  last_data_time: 0.0972   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:18:10 d2.utils.events]: [0m eta: 0:52:46  iter: 1559  total_loss: 0.1881  loss_cls: 0.07633  loss_box_reg: 0.09721  loss_rpn_cls: 0.009212  loss_rpn_loc: 0.01028    time: 0.3749  last_time: 0.4058  data_time: 0.0264  last_data_time: 0.0377   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:18:18 d2.utils.events]: [0m eta: 0:52:35  iter: 1579  total_loss: 0.2005  loss_cls: 0.07555  loss_box_reg: 0.1029  loss_rpn_cls: 0.01096  loss_rpn_loc: 0.01022    time: 0.3749  last_time: 0.3730  data_time: 0.0336  last_data_time: 0.0289   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:18:25 d2.utils.events]: [0m eta: 0:52:27  iter: 1599  total_loss: 0.1904  loss_cls: 0.07194  loss_box_reg: 0.09941  loss_rpn_cls: 0.01005  loss_rpn_loc: 0.007883    time: 0.3747  last_time: 0.3440  data_time: 0.0325  last_data_time: 0.0217   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:18:32 d2.utils.events]: [0m eta: 0:52:18  iter: 1619  total_loss: 0.2195  loss_cls: 0.08715  loss_box_reg: 0.1147  loss_rpn_cls: 0.007577  loss_rpn_loc: 0.008889    time: 0.3746  last_time: 0.3563  data_time: 0.0302  last_data_time: 0.0134   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:18:40 d2.utils.events]: [0m eta: 0:52:11  iter: 1639  total_loss: 0.2049  loss_cls: 0.0714  loss_box_reg: 0.1104  loss_rpn_cls: 0.008926  loss_rpn_loc: 0.01202    time: 0.3746  last_time: 0.3850  data_time: 0.0315  last_data_time: 0.0198   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:18:47 d2.utils.events]: [0m eta: 0:52:01  iter: 1659  total_loss: 0.2042  loss_cls: 0.07166  loss_box_reg: 0.1103  loss_rpn_cls: 0.009222  loss_rpn_loc: 0.01099    time: 0.3745  last_time: 0.3754  data_time: 0.0349  last_data_time: 0.0496   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:18:54 d2.utils.events]: [0m eta: 0:51:52  iter: 1679  total_loss: 0.2177  loss_cls: 0.08322  loss_box_reg: 0.1135  loss_rpn_cls: 0.009024  loss_rpn_loc: 0.009084    time: 0.3744  last_time: 0.3499  data_time: 0.0311  last_data_time: 0.0495   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:19:02 d2.utils.events]: [0m eta: 0:51:43  iter: 1699  total_loss: 0.214  loss_cls: 0.07849  loss_box_reg: 0.1141  loss_rpn_cls: 0.01028  loss_rpn_loc: 0.009508    time: 0.3743  last_time: 0.4013  data_time: 0.0341  last_data_time: 0.0859   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:19:09 d2.utils.events]: [0m eta: 0:51:34  iter: 1719  total_loss: 0.1829  loss_cls: 0.07078  loss_box_reg: 0.09686  loss_rpn_cls: 0.006787  loss_rpn_loc: 0.008626    time: 0.3742  last_time: 0.4134  data_time: 0.0277  last_data_time: 0.0331   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:19:17 d2.utils.events]: [0m eta: 0:51:25  iter: 1739  total_loss: 0.1813  loss_cls: 0.06543  loss_box_reg: 0.0965  loss_rpn_cls: 0.008804  loss_rpn_loc: 0.009591    time: 0.3742  last_time: 0.3479  data_time: 0.0366  last_data_time: 0.0658   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:19:24 d2.utils.events]: [0m eta: 0:51:14  iter: 1759  total_loss: 0.2062  loss_cls: 0.07882  loss_box_reg: 0.1084  loss_rpn_cls: 0.008161  loss_rpn_loc: 0.008152    time: 0.3741  last_time: 0.3605  data_time: 0.0265  last_data_time: 0.0374   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:19:32 d2.utils.events]: [0m eta: 0:51:08  iter: 1779  total_loss: 0.1753  loss_cls: 0.06576  loss_box_reg: 0.09882  loss_rpn_cls: 0.006751  loss_rpn_loc: 0.009543    time: 0.3742  last_time: 0.3407  data_time: 0.0370  last_data_time: 0.0174   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:19:39 d2.utils.events]: [0m eta: 0:50:58  iter: 1799  total_loss: 0.1922  loss_cls: 0.07318  loss_box_reg: 0.1034  loss_rpn_cls: 0.01061  loss_rpn_loc: 0.01008    time: 0.3742  last_time: 0.4065  data_time: 0.0345  last_data_time: 0.0701   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:19:47 d2.utils.events]: [0m eta: 0:50:50  iter: 1819  total_loss: 0.1888  loss_cls: 0.07011  loss_box_reg: 0.1027  loss_rpn_cls: 0.007228  loss_rpn_loc: 0.008414    time: 0.3743  last_time: 0.3284  data_time: 0.0424  last_data_time: 0.0379   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:19:54 d2.utils.events]: [0m eta: 0:50:40  iter: 1839  total_loss: 0.1873  loss_cls: 0.06824  loss_box_reg: 0.1017  loss_rpn_cls: 0.00967  loss_rpn_loc: 0.008934    time: 0.3743  last_time: 0.3361  data_time: 0.0329  last_data_time: 0.0283   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:20:02 d2.utils.events]: [0m eta: 0:50:32  iter: 1859  total_loss: 0.1888  loss_cls: 0.07309  loss_box_reg: 0.09853  loss_rpn_cls: 0.009829  loss_rpn_loc: 0.008549    time: 0.3742  last_time: 0.3463  data_time: 0.0321  last_data_time: 0.0049   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:20:09 d2.utils.events]: [0m eta: 0:50:30  iter: 1879  total_loss: 0.1911  loss_cls: 0.06873  loss_box_reg: 0.1  loss_rpn_cls: 0.008903  loss_rpn_loc: 0.01073    time: 0.3743  last_time: 0.3699  data_time: 0.0348  last_data_time: 0.0183   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:20:17 d2.utils.events]: [0m eta: 0:50:24  iter: 1899  total_loss: 0.2163  loss_cls: 0.07488  loss_box_reg: 0.1224  loss_rpn_cls: 0.00843  loss_rpn_loc: 0.009259    time: 0.3743  last_time: 0.3153  data_time: 0.0287  last_data_time: 0.0046   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:20:24 d2.utils.events]: [0m eta: 0:50:15  iter: 1919  total_loss: 0.1871  loss_cls: 0.07126  loss_box_reg: 0.09819  loss_rpn_cls: 0.007551  loss_rpn_loc: 0.008435    time: 0.3743  last_time: 0.3493  data_time: 0.0359  last_data_time: 0.0265   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:20:32 d2.utils.events]: [0m eta: 0:50:04  iter: 1939  total_loss: 0.1991  loss_cls: 0.07523  loss_box_reg: 0.112  loss_rpn_cls: 0.007198  loss_rpn_loc: 0.008995    time: 0.3742  last_time: 0.3653  data_time: 0.0387  last_data_time: 0.0322   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:20:39 d2.utils.events]: [0m eta: 0:49:56  iter: 1959  total_loss: 0.2274  loss_cls: 0.08282  loss_box_reg: 0.1228  loss_rpn_cls: 0.008648  loss_rpn_loc: 0.01167    time: 0.3742  last_time: 0.3768  data_time: 0.0321  last_data_time: 0.0135   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:20:46 d2.utils.events]: [0m eta: 0:49:47  iter: 1979  total_loss: 0.1925  loss_cls: 0.07107  loss_box_reg: 0.09843  loss_rpn_cls: 0.00773  loss_rpn_loc: 0.009203    time: 0.3741  last_time: 0.3002  data_time: 0.0312  last_data_time: 0.0063   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:20:54 d2.data.datasets.coco]: [0mLoaded 177 images in COCO format from ../datasets/coco/annotations/dog_instances_val2017.json
[32m[11/11 22:20:54 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/11 22:20:54 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[32m[11/11 22:20:54 d2.data.common]: [0mSerializing 177 elements to byte tensors and concatenating them all ...
[32m[11/11 22:20:54 d2.data.common]: [0mSerialized dataset takes 0.24 MiB
[5m[31mWARNING[0m [32m[11/11 22:20:54 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/11 22:20:54 d2.utils.events]: [0m eta: 0:49:38  iter: 1999  total_loss: 0.1895  loss_cls: 0.07166  loss_box_reg: 0.1018  loss_rpn_cls: 0.008278  loss_rpn_loc: 0.008835    time: 0.3741  last_time: 0.3948  data_time: 0.0349  last_data_time: 0.0328   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:21:02 d2.utils.events]: [0m eta: 0:49:31  iter: 2019  total_loss: 0.2149  loss_cls: 0.07684  loss_box_reg: 0.1178  loss_rpn_cls: 0.007906  loss_rpn_loc: 0.009842    time: 0.3741  last_time: 0.3082  data_time: 0.0326  last_data_time: 0.0173   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:21:09 d2.utils.events]: [0m eta: 0:49:25  iter: 2039  total_loss: 0.1962  loss_cls: 0.07517  loss_box_reg: 0.1059  loss_rpn_cls: 0.009006  loss_rpn_loc: 0.008562    time: 0.3741  last_time: 0.3791  data_time: 0.0304  last_data_time: 0.0522   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:21:17 d2.utils.events]: [0m eta: 0:49:14  iter: 2059  total_loss: 0.2304  loss_cls: 0.08417  loss_box_reg: 0.1184  loss_rpn_cls: 0.009233  loss_rpn_loc: 0.01086    time: 0.3740  last_time: 0.3267  data_time: 0.0305  last_data_time: 0.0141   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:21:24 d2.utils.events]: [0m eta: 0:49:06  iter: 2079  total_loss: 0.2  loss_cls: 0.07281  loss_box_reg: 0.1024  loss_rpn_cls: 0.008909  loss_rpn_loc: 0.009524    time: 0.3741  last_time: 0.4097  data_time: 0.0365  last_data_time: 0.0550   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:21:32 d2.utils.events]: [0m eta: 0:48:59  iter: 2099  total_loss: 0.2072  loss_cls: 0.06973  loss_box_reg: 0.1091  loss_rpn_cls: 0.01167  loss_rpn_loc: 0.01144    time: 0.3740  last_time: 0.3655  data_time: 0.0341  last_data_time: 0.0092   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:21:39 d2.utils.events]: [0m eta: 0:48:48  iter: 2119  total_loss: 0.2  loss_cls: 0.07216  loss_box_reg: 0.1018  loss_rpn_cls: 0.00867  loss_rpn_loc: 0.009655    time: 0.3739  last_time: 0.3358  data_time: 0.0313  last_data_time: 0.0139   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:21:46 d2.utils.events]: [0m eta: 0:48:40  iter: 2139  total_loss: 0.1924  loss_cls: 0.06776  loss_box_reg: 0.1008  loss_rpn_cls: 0.006248  loss_rpn_loc: 0.007616    time: 0.3739  last_time: 0.3100  data_time: 0.0384  last_data_time: 0.0259   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:21:54 d2.utils.events]: [0m eta: 0:48:34  iter: 2159  total_loss: 0.1968  loss_cls: 0.07063  loss_box_reg: 0.1052  loss_rpn_cls: 0.007289  loss_rpn_loc: 0.009797    time: 0.3738  last_time: 0.3877  data_time: 0.0296  last_data_time: 0.0313   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:22:01 d2.utils.events]: [0m eta: 0:48:23  iter: 2179  total_loss: 0.1894  loss_cls: 0.06793  loss_box_reg: 0.1062  loss_rpn_cls: 0.00767  loss_rpn_loc: 0.009243    time: 0.3737  last_time: 0.4128  data_time: 0.0330  last_data_time: 0.0314   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:22:08 d2.utils.events]: [0m eta: 0:48:18  iter: 2199  total_loss: 0.2204  loss_cls: 0.07965  loss_box_reg: 0.1174  loss_rpn_cls: 0.006275  loss_rpn_loc: 0.01055    time: 0.3737  last_time: 0.3379  data_time: 0.0348  last_data_time: 0.0305   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:22:16 d2.utils.events]: [0m eta: 0:48:11  iter: 2219  total_loss: 0.1956  loss_cls: 0.07236  loss_box_reg: 0.1051  loss_rpn_cls: 0.007846  loss_rpn_loc: 0.01167    time: 0.3737  last_time: 0.3876  data_time: 0.0321  last_data_time: 0.0200   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:22:23 d2.utils.events]: [0m eta: 0:48:07  iter: 2239  total_loss: 0.1945  loss_cls: 0.07022  loss_box_reg: 0.1037  loss_rpn_cls: 0.00875  loss_rpn_loc: 0.009248    time: 0.3737  last_time: 0.3859  data_time: 0.0373  last_data_time: 0.0562   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:22:31 d2.utils.events]: [0m eta: 0:47:59  iter: 2259  total_loss: 0.1877  loss_cls: 0.06931  loss_box_reg: 0.101  loss_rpn_cls: 0.007692  loss_rpn_loc: 0.009696    time: 0.3737  last_time: 0.3572  data_time: 0.0339  last_data_time: 0.0073   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:22:38 d2.utils.events]: [0m eta: 0:47:53  iter: 2279  total_loss: 0.1901  loss_cls: 0.07366  loss_box_reg: 0.1003  loss_rpn_cls: 0.006052  loss_rpn_loc: 0.008266    time: 0.3737  last_time: 0.4278  data_time: 0.0324  last_data_time: 0.0731   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:22:46 d2.utils.events]: [0m eta: 0:47:45  iter: 2299  total_loss: 0.1965  loss_cls: 0.06646  loss_box_reg: 0.08918  loss_rpn_cls: 0.007302  loss_rpn_loc: 0.007365    time: 0.3739  last_time: 0.4120  data_time: 0.0354  last_data_time: 0.0360   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:22:53 d2.utils.events]: [0m eta: 0:47:34  iter: 2319  total_loss: 0.1835  loss_cls: 0.06936  loss_box_reg: 0.09222  loss_rpn_cls: 0.00814  loss_rpn_loc: 0.009044    time: 0.3737  last_time: 0.3755  data_time: 0.0270  last_data_time: 0.0286   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:23:01 d2.utils.events]: [0m eta: 0:47:26  iter: 2339  total_loss: 0.2015  loss_cls: 0.07595  loss_box_reg: 0.1073  loss_rpn_cls: 0.008151  loss_rpn_loc: 0.008696    time: 0.3736  last_time: 0.3453  data_time: 0.0312  last_data_time: 0.0204   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:23:08 d2.utils.events]: [0m eta: 0:47:16  iter: 2359  total_loss: 0.1954  loss_cls: 0.06937  loss_box_reg: 0.1092  loss_rpn_cls: 0.006953  loss_rpn_loc: 0.008575    time: 0.3736  last_time: 0.4069  data_time: 0.0323  last_data_time: 0.0352   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:23:15 d2.utils.events]: [0m eta: 0:47:08  iter: 2379  total_loss: 0.213  loss_cls: 0.07554  loss_box_reg: 0.1145  loss_rpn_cls: 0.006607  loss_rpn_loc: 0.009204    time: 0.3735  last_time: 0.3426  data_time: 0.0328  last_data_time: 0.0407   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:23:23 d2.utils.events]: [0m eta: 0:46:59  iter: 2399  total_loss: 0.2031  loss_cls: 0.0734  loss_box_reg: 0.1049  loss_rpn_cls: 0.008236  loss_rpn_loc: 0.008879    time: 0.3735  last_time: 0.3994  data_time: 0.0313  last_data_time: 0.0563   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:23:30 d2.utils.events]: [0m eta: 0:46:49  iter: 2419  total_loss: 0.177  loss_cls: 0.06777  loss_box_reg: 0.0932  loss_rpn_cls: 0.00674  loss_rpn_loc: 0.00913    time: 0.3734  last_time: 0.3607  data_time: 0.0291  last_data_time: 0.0105   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:23:37 d2.utils.events]: [0m eta: 0:46:41  iter: 2439  total_loss: 0.2178  loss_cls: 0.07943  loss_box_reg: 0.1113  loss_rpn_cls: 0.01073  loss_rpn_loc: 0.01011    time: 0.3733  last_time: 0.4045  data_time: 0.0299  last_data_time: 0.0965   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:23:44 d2.utils.events]: [0m eta: 0:46:33  iter: 2459  total_loss: 0.199  loss_cls: 0.07649  loss_box_reg: 0.1003  loss_rpn_cls: 0.008506  loss_rpn_loc: 0.01047    time: 0.3732  last_time: 0.4236  data_time: 0.0302  last_data_time: 0.0373   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:23:52 d2.utils.events]: [0m eta: 0:46:25  iter: 2479  total_loss: 0.1723  loss_cls: 0.06371  loss_box_reg: 0.09069  loss_rpn_cls: 0.006133  loss_rpn_loc: 0.00889    time: 0.3732  last_time: 0.3700  data_time: 0.0298  last_data_time: 0.0218   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:23:59 d2.utils.events]: [0m eta: 0:46:17  iter: 2499  total_loss: 0.1624  loss_cls: 0.05615  loss_box_reg: 0.08999  loss_rpn_cls: 0.00608  loss_rpn_loc: 0.007698    time: 0.3732  last_time: 0.3540  data_time: 0.0349  last_data_time: 0.0166   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:24:06 d2.utils.events]: [0m eta: 0:46:08  iter: 2519  total_loss: 0.2327  loss_cls: 0.07485  loss_box_reg: 0.1107  loss_rpn_cls: 0.008558  loss_rpn_loc: 0.009096    time: 0.3731  last_time: 0.3120  data_time: 0.0317  last_data_time: 0.0092   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:24:14 d2.utils.events]: [0m eta: 0:46:00  iter: 2539  total_loss: 0.1898  loss_cls: 0.07245  loss_box_reg: 0.1075  loss_rpn_cls: 0.006604  loss_rpn_loc: 0.007412    time: 0.3730  last_time: 0.3698  data_time: 0.0330  last_data_time: 0.0178   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:24:21 d2.utils.events]: [0m eta: 0:45:52  iter: 2559  total_loss: 0.1811  loss_cls: 0.06827  loss_box_reg: 0.1022  loss_rpn_cls: 0.008935  loss_rpn_loc: 0.008688    time: 0.3729  last_time: 0.3739  data_time: 0.0312  last_data_time: 0.0302   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:24:28 d2.utils.events]: [0m eta: 0:45:45  iter: 2579  total_loss: 0.1844  loss_cls: 0.07104  loss_box_reg: 0.09984  loss_rpn_cls: 0.00617  loss_rpn_loc: 0.009091    time: 0.3728  last_time: 0.4062  data_time: 0.0309  last_data_time: 0.0130   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:24:36 d2.utils.events]: [0m eta: 0:45:38  iter: 2599  total_loss: 0.1759  loss_cls: 0.0682  loss_box_reg: 0.09495  loss_rpn_cls: 0.00654  loss_rpn_loc: 0.009461    time: 0.3729  last_time: 0.3944  data_time: 0.0415  last_data_time: 0.0454   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:24:43 d2.utils.events]: [0m eta: 0:45:30  iter: 2619  total_loss: 0.2104  loss_cls: 0.07453  loss_box_reg: 0.1117  loss_rpn_cls: 0.006573  loss_rpn_loc: 0.01021    time: 0.3729  last_time: 0.4107  data_time: 0.0310  last_data_time: 0.0339   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:24:51 d2.utils.events]: [0m eta: 0:45:23  iter: 2639  total_loss: 0.1632  loss_cls: 0.06258  loss_box_reg: 0.08832  loss_rpn_cls: 0.007989  loss_rpn_loc: 0.008226    time: 0.3729  last_time: 0.4316  data_time: 0.0303  last_data_time: 0.0425   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:24:58 d2.utils.events]: [0m eta: 0:45:17  iter: 2659  total_loss: 0.1907  loss_cls: 0.0703  loss_box_reg: 0.1009  loss_rpn_cls: 0.006195  loss_rpn_loc: 0.007532    time: 0.3728  last_time: 0.3895  data_time: 0.0317  last_data_time: 0.0385   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:25:05 d2.utils.events]: [0m eta: 0:45:10  iter: 2679  total_loss: 0.1881  loss_cls: 0.06527  loss_box_reg: 0.1034  loss_rpn_cls: 0.005926  loss_rpn_loc: 0.008146    time: 0.3728  last_time: 0.3451  data_time: 0.0324  last_data_time: 0.0569   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:25:13 d2.utils.events]: [0m eta: 0:45:03  iter: 2699  total_loss: 0.1713  loss_cls: 0.06165  loss_box_reg: 0.09305  loss_rpn_cls: 0.00696  loss_rpn_loc: 0.009815    time: 0.3728  last_time: 0.3725  data_time: 0.0332  last_data_time: 0.0248   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:25:20 d2.utils.events]: [0m eta: 0:44:56  iter: 2719  total_loss: 0.1858  loss_cls: 0.0707  loss_box_reg: 0.09933  loss_rpn_cls: 0.007528  loss_rpn_loc: 0.009034    time: 0.3727  last_time: 0.3781  data_time: 0.0353  last_data_time: 0.0736   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:25:28 d2.utils.events]: [0m eta: 0:44:49  iter: 2739  total_loss: 0.1758  loss_cls: 0.06167  loss_box_reg: 0.09791  loss_rpn_cls: 0.007368  loss_rpn_loc: 0.008144    time: 0.3727  last_time: 0.3803  data_time: 0.0281  last_data_time: 0.0149   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:25:35 d2.utils.events]: [0m eta: 0:44:44  iter: 2759  total_loss: 0.1847  loss_cls: 0.06864  loss_box_reg: 0.09942  loss_rpn_cls: 0.006321  loss_rpn_loc: 0.008761    time: 0.3728  last_time: 0.3507  data_time: 0.0417  last_data_time: 0.0252   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:25:43 d2.utils.events]: [0m eta: 0:44:35  iter: 2779  total_loss: 0.1929  loss_cls: 0.06454  loss_box_reg: 0.09706  loss_rpn_cls: 0.008403  loss_rpn_loc: 0.01113    time: 0.3727  last_time: 0.3377  data_time: 0.0339  last_data_time: 0.0106   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:25:50 d2.utils.events]: [0m eta: 0:44:28  iter: 2799  total_loss: 0.1867  loss_cls: 0.06458  loss_box_reg: 0.1038  loss_rpn_cls: 0.006065  loss_rpn_loc: 0.00789    time: 0.3728  last_time: 0.4137  data_time: 0.0352  last_data_time: 0.0596   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:25:57 d2.utils.events]: [0m eta: 0:44:20  iter: 2819  total_loss: 0.184  loss_cls: 0.0693  loss_box_reg: 0.1015  loss_rpn_cls: 0.006088  loss_rpn_loc: 0.007348    time: 0.3727  last_time: 0.3313  data_time: 0.0322  last_data_time: 0.0402   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:26:05 d2.utils.events]: [0m eta: 0:44:14  iter: 2839  total_loss: 0.192  loss_cls: 0.07248  loss_box_reg: 0.1091  loss_rpn_cls: 0.005869  loss_rpn_loc: 0.009284    time: 0.3727  last_time: 0.3371  data_time: 0.0346  last_data_time: 0.0251   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:26:12 d2.utils.events]: [0m eta: 0:44:07  iter: 2859  total_loss: 0.1825  loss_cls: 0.06492  loss_box_reg: 0.09516  loss_rpn_cls: 0.008107  loss_rpn_loc: 0.008263    time: 0.3727  last_time: 0.3382  data_time: 0.0317  last_data_time: 0.0071   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:26:20 d2.utils.events]: [0m eta: 0:43:59  iter: 2879  total_loss: 0.1817  loss_cls: 0.06596  loss_box_reg: 0.1047  loss_rpn_cls: 0.005483  loss_rpn_loc: 0.006732    time: 0.3727  last_time: 0.3978  data_time: 0.0358  last_data_time: 0.0372   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:26:27 d2.utils.events]: [0m eta: 0:43:52  iter: 2899  total_loss: 0.1889  loss_cls: 0.06561  loss_box_reg: 0.1009  loss_rpn_cls: 0.006868  loss_rpn_loc: 0.008025    time: 0.3728  last_time: 0.3688  data_time: 0.0360  last_data_time: 0.0107   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:26:35 d2.utils.events]: [0m eta: 0:43:43  iter: 2919  total_loss: 0.1692  loss_cls: 0.06486  loss_box_reg: 0.09158  loss_rpn_cls: 0.007218  loss_rpn_loc: 0.0083    time: 0.3727  last_time: 0.3795  data_time: 0.0342  last_data_time: 0.0832   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:26:42 d2.utils.events]: [0m eta: 0:43:37  iter: 2939  total_loss: 0.2075  loss_cls: 0.07555  loss_box_reg: 0.116  loss_rpn_cls: 0.006484  loss_rpn_loc: 0.009384    time: 0.3727  last_time: 0.3583  data_time: 0.0370  last_data_time: 0.0336   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:26:50 d2.utils.events]: [0m eta: 0:43:29  iter: 2959  total_loss: 0.1915  loss_cls: 0.06686  loss_box_reg: 0.1106  loss_rpn_cls: 0.006522  loss_rpn_loc: 0.007183    time: 0.3728  last_time: 0.3978  data_time: 0.0372  last_data_time: 0.0472   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:26:57 d2.utils.events]: [0m eta: 0:43:23  iter: 2979  total_loss: 0.2145  loss_cls: 0.07345  loss_box_reg: 0.1146  loss_rpn_cls: 0.007863  loss_rpn_loc: 0.009056    time: 0.3727  last_time: 0.3025  data_time: 0.0277  last_data_time: 0.0062   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:27:05 d2.data.datasets.coco]: [0mLoaded 177 images in COCO format from ../datasets/coco/annotations/dog_instances_val2017.json
[32m[11/11 22:27:05 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/11 22:27:05 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[32m[11/11 22:27:05 d2.data.common]: [0mSerializing 177 elements to byte tensors and concatenating them all ...
[32m[11/11 22:27:05 d2.data.common]: [0mSerialized dataset takes 0.24 MiB
[5m[31mWARNING[0m [32m[11/11 22:27:05 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/11 22:27:05 d2.utils.events]: [0m eta: 0:43:14  iter: 2999  total_loss: 0.1625  loss_cls: 0.05711  loss_box_reg: 0.09152  loss_rpn_cls: 0.006434  loss_rpn_loc: 0.008124    time: 0.3726  last_time: 0.2753  data_time: 0.0308  last_data_time: 0.0078   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:27:12 d2.utils.events]: [0m eta: 0:43:07  iter: 3019  total_loss: 0.1939  loss_cls: 0.06565  loss_box_reg: 0.1097  loss_rpn_cls: 0.007564  loss_rpn_loc: 0.0137    time: 0.3726  last_time: 0.3497  data_time: 0.0350  last_data_time: 0.0358   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:27:20 d2.utils.events]: [0m eta: 0:43:00  iter: 3039  total_loss: 0.1952  loss_cls: 0.07168  loss_box_reg: 0.107  loss_rpn_cls: 0.007384  loss_rpn_loc: 0.009531    time: 0.3727  last_time: 0.3620  data_time: 0.0344  last_data_time: 0.0283   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:27:27 d2.utils.events]: [0m eta: 0:42:52  iter: 3059  total_loss: 0.1695  loss_cls: 0.06008  loss_box_reg: 0.09143  loss_rpn_cls: 0.00869  loss_rpn_loc: 0.007484    time: 0.3726  last_time: 0.3475  data_time: 0.0313  last_data_time: 0.0098   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:27:35 d2.utils.events]: [0m eta: 0:42:43  iter: 3079  total_loss: 0.2048  loss_cls: 0.07424  loss_box_reg: 0.1051  loss_rpn_cls: 0.008441  loss_rpn_loc: 0.009248    time: 0.3726  last_time: 0.3419  data_time: 0.0307  last_data_time: 0.0325   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:27:42 d2.utils.events]: [0m eta: 0:42:35  iter: 3099  total_loss: 0.178  loss_cls: 0.06071  loss_box_reg: 0.1015  loss_rpn_cls: 0.009178  loss_rpn_loc: 0.008447    time: 0.3726  last_time: 0.3291  data_time: 0.0340  last_data_time: 0.0302   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:27:50 d2.utils.events]: [0m eta: 0:42:31  iter: 3119  total_loss: 0.1863  loss_cls: 0.06776  loss_box_reg: 0.1031  loss_rpn_cls: 0.006938  loss_rpn_loc: 0.00885    time: 0.3727  last_time: 0.3130  data_time: 0.0306  last_data_time: 0.0301   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:27:57 d2.utils.events]: [0m eta: 0:42:26  iter: 3139  total_loss: 0.1833  loss_cls: 0.06945  loss_box_reg: 0.101  loss_rpn_cls: 0.005885  loss_rpn_loc: 0.008574    time: 0.3727  last_time: 0.3336  data_time: 0.0334  last_data_time: 0.0320   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:28:04 d2.utils.events]: [0m eta: 0:42:17  iter: 3159  total_loss: 0.199  loss_cls: 0.07087  loss_box_reg: 0.1078  loss_rpn_cls: 0.005549  loss_rpn_loc: 0.008443    time: 0.3726  last_time: 0.3935  data_time: 0.0321  last_data_time: 0.0338   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:28:12 d2.utils.events]: [0m eta: 0:42:11  iter: 3179  total_loss: 0.1782  loss_cls: 0.06331  loss_box_reg: 0.09549  loss_rpn_cls: 0.004856  loss_rpn_loc: 0.008378    time: 0.3726  last_time: 0.3667  data_time: 0.0307  last_data_time: 0.0119   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:28:19 d2.utils.events]: [0m eta: 0:42:03  iter: 3199  total_loss: 0.1722  loss_cls: 0.06264  loss_box_reg: 0.09677  loss_rpn_cls: 0.005809  loss_rpn_loc: 0.007874    time: 0.3727  last_time: 0.3685  data_time: 0.0329  last_data_time: 0.0573   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:28:27 d2.utils.events]: [0m eta: 0:41:56  iter: 3219  total_loss: 0.1602  loss_cls: 0.05941  loss_box_reg: 0.09092  loss_rpn_cls: 0.006408  loss_rpn_loc: 0.008006    time: 0.3727  last_time: 0.3596  data_time: 0.0314  last_data_time: 0.0319   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:28:34 d2.utils.events]: [0m eta: 0:41:49  iter: 3239  total_loss: 0.1765  loss_cls: 0.0608  loss_box_reg: 0.09821  loss_rpn_cls: 0.005953  loss_rpn_loc: 0.008256    time: 0.3727  last_time: 0.4176  data_time: 0.0355  last_data_time: 0.0445   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:28:42 d2.utils.events]: [0m eta: 0:41:41  iter: 3259  total_loss: 0.1703  loss_cls: 0.06405  loss_box_reg: 0.09686  loss_rpn_cls: 0.006829  loss_rpn_loc: 0.009529    time: 0.3727  last_time: 0.3670  data_time: 0.0291  last_data_time: 0.0227   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:28:49 d2.utils.events]: [0m eta: 0:41:31  iter: 3279  total_loss: 0.1905  loss_cls: 0.07205  loss_box_reg: 0.09817  loss_rpn_cls: 0.007045  loss_rpn_loc: 0.00792    time: 0.3726  last_time: 0.3816  data_time: 0.0345  last_data_time: 0.0294   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:28:57 d2.utils.events]: [0m eta: 0:41:20  iter: 3299  total_loss: 0.1827  loss_cls: 0.06494  loss_box_reg: 0.09675  loss_rpn_cls: 0.007413  loss_rpn_loc: 0.01096    time: 0.3726  last_time: 0.4667  data_time: 0.0314  last_data_time: 0.0375   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:29:04 d2.utils.events]: [0m eta: 0:41:17  iter: 3319  total_loss: 0.1747  loss_cls: 0.06004  loss_box_reg: 0.09685  loss_rpn_cls: 0.005224  loss_rpn_loc: 0.009175    time: 0.3726  last_time: 0.3852  data_time: 0.0349  last_data_time: 0.0269   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:29:12 d2.utils.events]: [0m eta: 0:41:10  iter: 3339  total_loss: 0.1718  loss_cls: 0.06637  loss_box_reg: 0.09307  loss_rpn_cls: 0.004931  loss_rpn_loc: 0.007705    time: 0.3727  last_time: 0.3816  data_time: 0.0341  last_data_time: 0.0156   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:29:19 d2.utils.events]: [0m eta: 0:41:04  iter: 3359  total_loss: 0.1703  loss_cls: 0.06568  loss_box_reg: 0.09621  loss_rpn_cls: 0.00623  loss_rpn_loc: 0.006939    time: 0.3726  last_time: 0.3682  data_time: 0.0304  last_data_time: 0.0083   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:29:26 d2.utils.events]: [0m eta: 0:40:57  iter: 3379  total_loss: 0.1812  loss_cls: 0.06555  loss_box_reg: 0.1012  loss_rpn_cls: 0.005689  loss_rpn_loc: 0.008525    time: 0.3726  last_time: 0.3998  data_time: 0.0315  last_data_time: 0.0307   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:29:34 d2.utils.events]: [0m eta: 0:40:49  iter: 3399  total_loss: 0.1681  loss_cls: 0.06261  loss_box_reg: 0.09135  loss_rpn_cls: 0.006041  loss_rpn_loc: 0.0086    time: 0.3726  last_time: 0.3454  data_time: 0.0300  last_data_time: 0.0114   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:29:41 d2.utils.events]: [0m eta: 0:40:42  iter: 3419  total_loss: 0.167  loss_cls: 0.05927  loss_box_reg: 0.09129  loss_rpn_cls: 0.007107  loss_rpn_loc: 0.009948    time: 0.3725  last_time: 0.3728  data_time: 0.0303  last_data_time: 0.0341   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:29:49 d2.utils.events]: [0m eta: 0:40:41  iter: 3439  total_loss: 0.1756  loss_cls: 0.06209  loss_box_reg: 0.09512  loss_rpn_cls: 0.005749  loss_rpn_loc: 0.009605    time: 0.3726  last_time: 0.4112  data_time: 0.0334  last_data_time: 0.0140   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:29:56 d2.utils.events]: [0m eta: 0:40:33  iter: 3459  total_loss: 0.1765  loss_cls: 0.05998  loss_box_reg: 0.1002  loss_rpn_cls: 0.005859  loss_rpn_loc: 0.007361    time: 0.3726  last_time: 0.4093  data_time: 0.0297  last_data_time: 0.0586   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:30:03 d2.utils.events]: [0m eta: 0:40:24  iter: 3479  total_loss: 0.1727  loss_cls: 0.05789  loss_box_reg: 0.09266  loss_rpn_cls: 0.006265  loss_rpn_loc: 0.007631    time: 0.3725  last_time: 0.3338  data_time: 0.0290  last_data_time: 0.0067   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:30:11 d2.utils.events]: [0m eta: 0:40:17  iter: 3499  total_loss: 0.1712  loss_cls: 0.06726  loss_box_reg: 0.0987  loss_rpn_cls: 0.004502  loss_rpn_loc: 0.007731    time: 0.3725  last_time: 0.3402  data_time: 0.0364  last_data_time: 0.0143   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:30:18 d2.utils.events]: [0m eta: 0:40:13  iter: 3519  total_loss: 0.1739  loss_cls: 0.06315  loss_box_reg: 0.09772  loss_rpn_cls: 0.005602  loss_rpn_loc: 0.007854    time: 0.3725  last_time: 0.3890  data_time: 0.0364  last_data_time: 0.0366   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:30:26 d2.utils.events]: [0m eta: 0:40:07  iter: 3539  total_loss: 0.1772  loss_cls: 0.05977  loss_box_reg: 0.09665  loss_rpn_cls: 0.005686  loss_rpn_loc: 0.00743    time: 0.3725  last_time: 0.4104  data_time: 0.0333  last_data_time: 0.0371   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:30:33 d2.utils.events]: [0m eta: 0:40:01  iter: 3559  total_loss: 0.1837  loss_cls: 0.06734  loss_box_reg: 0.1016  loss_rpn_cls: 0.006863  loss_rpn_loc: 0.008633    time: 0.3725  last_time: 0.3102  data_time: 0.0376  last_data_time: 0.0144   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:30:40 d2.utils.events]: [0m eta: 0:39:54  iter: 3579  total_loss: 0.1749  loss_cls: 0.06405  loss_box_reg: 0.09426  loss_rpn_cls: 0.00645  loss_rpn_loc: 0.007846    time: 0.3724  last_time: 0.3512  data_time: 0.0310  last_data_time: 0.0025   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:30:48 d2.utils.events]: [0m eta: 0:39:45  iter: 3599  total_loss: 0.17  loss_cls: 0.0581  loss_box_reg: 0.0942  loss_rpn_cls: 0.003992  loss_rpn_loc: 0.007473    time: 0.3724  last_time: 0.3962  data_time: 0.0323  last_data_time: 0.0395   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:30:55 d2.utils.events]: [0m eta: 0:39:39  iter: 3619  total_loss: 0.1679  loss_cls: 0.0606  loss_box_reg: 0.09635  loss_rpn_cls: 0.008109  loss_rpn_loc: 0.009396    time: 0.3724  last_time: 0.3862  data_time: 0.0335  last_data_time: 0.0195   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:31:03 d2.utils.events]: [0m eta: 0:39:32  iter: 3639  total_loss: 0.1708  loss_cls: 0.06238  loss_box_reg: 0.09518  loss_rpn_cls: 0.006204  loss_rpn_loc: 0.007079    time: 0.3724  last_time: 0.3899  data_time: 0.0386  last_data_time: 0.0457   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:31:10 d2.utils.events]: [0m eta: 0:39:23  iter: 3659  total_loss: 0.191  loss_cls: 0.07046  loss_box_reg: 0.1003  loss_rpn_cls: 0.007358  loss_rpn_loc: 0.009508    time: 0.3724  last_time: 0.3936  data_time: 0.0284  last_data_time: 0.0464   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:31:17 d2.utils.events]: [0m eta: 0:39:15  iter: 3679  total_loss: 0.1702  loss_cls: 0.05924  loss_box_reg: 0.09101  loss_rpn_cls: 0.00521  loss_rpn_loc: 0.007108    time: 0.3723  last_time: 0.4075  data_time: 0.0321  last_data_time: 0.0445   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:31:24 d2.utils.events]: [0m eta: 0:39:05  iter: 3699  total_loss: 0.1842  loss_cls: 0.06312  loss_box_reg: 0.1012  loss_rpn_cls: 0.00556  loss_rpn_loc: 0.009107    time: 0.3723  last_time: 0.3362  data_time: 0.0302  last_data_time: 0.0184   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:31:32 d2.utils.events]: [0m eta: 0:38:56  iter: 3719  total_loss: 0.1792  loss_cls: 0.06023  loss_box_reg: 0.0983  loss_rpn_cls: 0.007969  loss_rpn_loc: 0.01128    time: 0.3722  last_time: 0.3520  data_time: 0.0294  last_data_time: 0.0168   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:31:39 d2.utils.events]: [0m eta: 0:38:47  iter: 3739  total_loss: 0.1713  loss_cls: 0.06346  loss_box_reg: 0.09377  loss_rpn_cls: 0.006337  loss_rpn_loc: 0.007444    time: 0.3722  last_time: 0.3670  data_time: 0.0357  last_data_time: 0.0116   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:31:46 d2.utils.events]: [0m eta: 0:38:35  iter: 3759  total_loss: 0.202  loss_cls: 0.07269  loss_box_reg: 0.111  loss_rpn_cls: 0.006121  loss_rpn_loc: 0.008517    time: 0.3721  last_time: 0.4018  data_time: 0.0326  last_data_time: 0.0298   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:31:54 d2.utils.events]: [0m eta: 0:38:28  iter: 3779  total_loss: 0.1691  loss_cls: 0.06385  loss_box_reg: 0.09835  loss_rpn_cls: 0.006346  loss_rpn_loc: 0.009517    time: 0.3721  last_time: 0.3655  data_time: 0.0370  last_data_time: 0.0113   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:32:01 d2.utils.events]: [0m eta: 0:38:20  iter: 3799  total_loss: 0.1656  loss_cls: 0.05918  loss_box_reg: 0.08526  loss_rpn_cls: 0.00544  loss_rpn_loc: 0.007538    time: 0.3721  last_time: 0.3763  data_time: 0.0308  last_data_time: 0.0138   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:32:08 d2.utils.events]: [0m eta: 0:38:13  iter: 3819  total_loss: 0.1733  loss_cls: 0.06486  loss_box_reg: 0.09425  loss_rpn_cls: 0.007614  loss_rpn_loc: 0.008247    time: 0.3721  last_time: 0.3127  data_time: 0.0341  last_data_time: 0.0299   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:32:16 d2.utils.events]: [0m eta: 0:38:08  iter: 3839  total_loss: 0.1832  loss_cls: 0.06589  loss_box_reg: 0.1023  loss_rpn_cls: 0.004836  loss_rpn_loc: 0.008402    time: 0.3721  last_time: 0.3862  data_time: 0.0340  last_data_time: 0.0369   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:32:24 d2.utils.events]: [0m eta: 0:38:00  iter: 3859  total_loss: 0.1805  loss_cls: 0.06128  loss_box_reg: 0.09688  loss_rpn_cls: 0.006157  loss_rpn_loc: 0.007344    time: 0.3721  last_time: 0.3458  data_time: 0.0292  last_data_time: 0.0118   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:32:31 d2.utils.events]: [0m eta: 0:37:51  iter: 3879  total_loss: 0.171  loss_cls: 0.06444  loss_box_reg: 0.09108  loss_rpn_cls: 0.006878  loss_rpn_loc: 0.009102    time: 0.3721  last_time: 0.3756  data_time: 0.0345  last_data_time: 0.0237   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:32:38 d2.utils.events]: [0m eta: 0:37:43  iter: 3899  total_loss: 0.1685  loss_cls: 0.06013  loss_box_reg: 0.09165  loss_rpn_cls: 0.007462  loss_rpn_loc: 0.009428    time: 0.3721  last_time: 0.3736  data_time: 0.0315  last_data_time: 0.0219   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:32:46 d2.utils.events]: [0m eta: 0:37:39  iter: 3919  total_loss: 0.1674  loss_cls: 0.05707  loss_box_reg: 0.09324  loss_rpn_cls: 0.005411  loss_rpn_loc: 0.006936    time: 0.3721  last_time: 0.4041  data_time: 0.0315  last_data_time: 0.0555   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:32:53 d2.utils.events]: [0m eta: 0:37:30  iter: 3939  total_loss: 0.1688  loss_cls: 0.0613  loss_box_reg: 0.09003  loss_rpn_cls: 0.006345  loss_rpn_loc: 0.008316    time: 0.3721  last_time: 0.4165  data_time: 0.0311  last_data_time: 0.0470   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:33:00 d2.utils.events]: [0m eta: 0:37:22  iter: 3959  total_loss: 0.1981  loss_cls: 0.06798  loss_box_reg: 0.1065  loss_rpn_cls: 0.007069  loss_rpn_loc: 0.01001    time: 0.3720  last_time: 0.3984  data_time: 0.0314  last_data_time: 0.0143   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:33:08 d2.utils.events]: [0m eta: 0:37:16  iter: 3979  total_loss: 0.1461  loss_cls: 0.05019  loss_box_reg: 0.08527  loss_rpn_cls: 0.005596  loss_rpn_loc: 0.007145    time: 0.3721  last_time: 0.3843  data_time: 0.0322  last_data_time: 0.0206   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:33:16 d2.data.datasets.coco]: [0mLoaded 177 images in COCO format from ../datasets/coco/annotations/dog_instances_val2017.json
[32m[11/11 22:33:16 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/11 22:33:16 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[32m[11/11 22:33:16 d2.data.common]: [0mSerializing 177 elements to byte tensors and concatenating them all ...
[32m[11/11 22:33:16 d2.data.common]: [0mSerialized dataset takes 0.24 MiB
[5m[31mWARNING[0m [32m[11/11 22:33:16 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/11 22:33:16 d2.utils.events]: [0m eta: 0:37:07  iter: 3999  total_loss: 0.1846  loss_cls: 0.06692  loss_box_reg: 0.1074  loss_rpn_cls: 0.004182  loss_rpn_loc: 0.006391    time: 0.3720  last_time: 0.3565  data_time: 0.0316  last_data_time: 0.0336   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:33:23 d2.utils.events]: [0m eta: 0:36:58  iter: 4019  total_loss: 0.1662  loss_cls: 0.0597  loss_box_reg: 0.09108  loss_rpn_cls: 0.006253  loss_rpn_loc: 0.007422    time: 0.3720  last_time: 0.3714  data_time: 0.0329  last_data_time: 0.0257   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:33:30 d2.utils.events]: [0m eta: 0:36:50  iter: 4039  total_loss: 0.1658  loss_cls: 0.0573  loss_box_reg: 0.09312  loss_rpn_cls: 0.008953  loss_rpn_loc: 0.01175    time: 0.3719  last_time: 0.3710  data_time: 0.0329  last_data_time: 0.0398   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:33:38 d2.utils.events]: [0m eta: 0:36:43  iter: 4059  total_loss: 0.1626  loss_cls: 0.05835  loss_box_reg: 0.09319  loss_rpn_cls: 0.005611  loss_rpn_loc: 0.007064    time: 0.3720  last_time: 0.3727  data_time: 0.0343  last_data_time: 0.0515   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:33:45 d2.utils.events]: [0m eta: 0:36:37  iter: 4079  total_loss: 0.1658  loss_cls: 0.05774  loss_box_reg: 0.08937  loss_rpn_cls: 0.006019  loss_rpn_loc: 0.008209    time: 0.3720  last_time: 0.4181  data_time: 0.0364  last_data_time: 0.0670   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:33:53 d2.utils.events]: [0m eta: 0:36:29  iter: 4099  total_loss: 0.1618  loss_cls: 0.05814  loss_box_reg: 0.09124  loss_rpn_cls: 0.005186  loss_rpn_loc: 0.006414    time: 0.3719  last_time: 0.3816  data_time: 0.0292  last_data_time: 0.0289   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:34:00 d2.utils.events]: [0m eta: 0:36:20  iter: 4119  total_loss: 0.1748  loss_cls: 0.05969  loss_box_reg: 0.1016  loss_rpn_cls: 0.005285  loss_rpn_loc: 0.007204    time: 0.3719  last_time: 0.4130  data_time: 0.0324  last_data_time: 0.0565   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:34:07 d2.utils.events]: [0m eta: 0:36:12  iter: 4139  total_loss: 0.1679  loss_cls: 0.06178  loss_box_reg: 0.0827  loss_rpn_cls: 0.005811  loss_rpn_loc: 0.009546    time: 0.3719  last_time: 0.3612  data_time: 0.0365  last_data_time: 0.0108   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:34:15 d2.utils.events]: [0m eta: 0:36:05  iter: 4159  total_loss: 0.1779  loss_cls: 0.06192  loss_box_reg: 0.1042  loss_rpn_cls: 0.006407  loss_rpn_loc: 0.008661    time: 0.3719  last_time: 0.3748  data_time: 0.0325  last_data_time: 0.0240   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:34:22 d2.utils.events]: [0m eta: 0:35:58  iter: 4179  total_loss: 0.1557  loss_cls: 0.05181  loss_box_reg: 0.08736  loss_rpn_cls: 0.004138  loss_rpn_loc: 0.00762    time: 0.3719  last_time: 0.3603  data_time: 0.0278  last_data_time: 0.0163   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:34:29 d2.utils.events]: [0m eta: 0:35:49  iter: 4199  total_loss: 0.1615  loss_cls: 0.05907  loss_box_reg: 0.09286  loss_rpn_cls: 0.004593  loss_rpn_loc: 0.008945    time: 0.3718  last_time: 0.3817  data_time: 0.0316  last_data_time: 0.0188   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:34:37 d2.utils.events]: [0m eta: 0:35:40  iter: 4219  total_loss: 0.1766  loss_cls: 0.06155  loss_box_reg: 0.09366  loss_rpn_cls: 0.00515  loss_rpn_loc: 0.0086    time: 0.3718  last_time: 0.3270  data_time: 0.0338  last_data_time: 0.0076   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:34:44 d2.utils.events]: [0m eta: 0:35:31  iter: 4239  total_loss: 0.1676  loss_cls: 0.06071  loss_box_reg: 0.08899  loss_rpn_cls: 0.005652  loss_rpn_loc: 0.007456    time: 0.3718  last_time: 0.4495  data_time: 0.0364  last_data_time: 0.0794   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:34:51 d2.utils.events]: [0m eta: 0:35:23  iter: 4259  total_loss: 0.1767  loss_cls: 0.05938  loss_box_reg: 0.09262  loss_rpn_cls: 0.005623  loss_rpn_loc: 0.007207    time: 0.3718  last_time: 0.3355  data_time: 0.0317  last_data_time: 0.0112   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:34:59 d2.utils.events]: [0m eta: 0:35:18  iter: 4279  total_loss: 0.1871  loss_cls: 0.06423  loss_box_reg: 0.1129  loss_rpn_cls: 0.005429  loss_rpn_loc: 0.00873    time: 0.3718  last_time: 0.3996  data_time: 0.0328  last_data_time: 0.0309   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:35:06 d2.utils.events]: [0m eta: 0:35:13  iter: 4299  total_loss: 0.1699  loss_cls: 0.05977  loss_box_reg: 0.09218  loss_rpn_cls: 0.006375  loss_rpn_loc: 0.007784    time: 0.3718  last_time: 0.3774  data_time: 0.0324  last_data_time: 0.0067   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:35:14 d2.utils.events]: [0m eta: 0:35:06  iter: 4319  total_loss: 0.1669  loss_cls: 0.05265  loss_box_reg: 0.08954  loss_rpn_cls: 0.006759  loss_rpn_loc: 0.007705    time: 0.3717  last_time: 0.3812  data_time: 0.0338  last_data_time: 0.0686   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:35:21 d2.utils.events]: [0m eta: 0:34:57  iter: 4339  total_loss: 0.1625  loss_cls: 0.05389  loss_box_reg: 0.08926  loss_rpn_cls: 0.005527  loss_rpn_loc: 0.007255    time: 0.3717  last_time: 0.3722  data_time: 0.0363  last_data_time: 0.0295   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:35:28 d2.utils.events]: [0m eta: 0:34:48  iter: 4359  total_loss: 0.1711  loss_cls: 0.06704  loss_box_reg: 0.09036  loss_rpn_cls: 0.00546  loss_rpn_loc: 0.007958    time: 0.3717  last_time: 0.3405  data_time: 0.0332  last_data_time: 0.0194   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:35:36 d2.utils.events]: [0m eta: 0:34:39  iter: 4379  total_loss: 0.1868  loss_cls: 0.06559  loss_box_reg: 0.1069  loss_rpn_cls: 0.004787  loss_rpn_loc: 0.006206    time: 0.3717  last_time: 0.3694  data_time: 0.0388  last_data_time: 0.0343   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:35:43 d2.utils.events]: [0m eta: 0:34:33  iter: 4399  total_loss: 0.148  loss_cls: 0.04993  loss_box_reg: 0.08538  loss_rpn_cls: 0.003562  loss_rpn_loc: 0.006615    time: 0.3717  last_time: 0.3340  data_time: 0.0328  last_data_time: 0.0078   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:35:51 d2.utils.events]: [0m eta: 0:34:28  iter: 4419  total_loss: 0.1578  loss_cls: 0.05259  loss_box_reg: 0.08698  loss_rpn_cls: 0.003608  loss_rpn_loc: 0.007396    time: 0.3718  last_time: 0.3907  data_time: 0.0360  last_data_time: 0.0301   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:35:58 d2.utils.events]: [0m eta: 0:34:18  iter: 4439  total_loss: 0.1661  loss_cls: 0.05623  loss_box_reg: 0.09848  loss_rpn_cls: 0.006432  loss_rpn_loc: 0.007443    time: 0.3718  last_time: 0.3429  data_time: 0.0296  last_data_time: 0.0098   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:36:06 d2.utils.events]: [0m eta: 0:34:08  iter: 4459  total_loss: 0.1568  loss_cls: 0.05549  loss_box_reg: 0.08968  loss_rpn_cls: 0.005196  loss_rpn_loc: 0.006819    time: 0.3717  last_time: 0.3524  data_time: 0.0339  last_data_time: 0.0327   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:36:13 d2.utils.events]: [0m eta: 0:34:00  iter: 4479  total_loss: 0.1457  loss_cls: 0.05386  loss_box_reg: 0.08429  loss_rpn_cls: 0.004804  loss_rpn_loc: 0.007503    time: 0.3717  last_time: 0.3896  data_time: 0.0312  last_data_time: 0.0345   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:36:21 d2.utils.events]: [0m eta: 0:33:54  iter: 4499  total_loss: 0.1597  loss_cls: 0.05452  loss_box_reg: 0.08962  loss_rpn_cls: 0.004329  loss_rpn_loc: 0.006433    time: 0.3717  last_time: 0.3539  data_time: 0.0330  last_data_time: 0.0363   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:36:28 d2.utils.events]: [0m eta: 0:33:47  iter: 4519  total_loss: 0.1436  loss_cls: 0.04715  loss_box_reg: 0.08153  loss_rpn_cls: 0.00592  loss_rpn_loc: 0.008572    time: 0.3718  last_time: 0.3751  data_time: 0.0395  last_data_time: 0.0103   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:36:35 d2.utils.events]: [0m eta: 0:33:37  iter: 4539  total_loss: 0.1641  loss_cls: 0.06144  loss_box_reg: 0.0944  loss_rpn_cls: 0.005665  loss_rpn_loc: 0.008225    time: 0.3717  last_time: 0.3212  data_time: 0.0298  last_data_time: 0.0293   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:36:43 d2.utils.events]: [0m eta: 0:33:30  iter: 4559  total_loss: 0.1767  loss_cls: 0.06542  loss_box_reg: 0.09574  loss_rpn_cls: 0.005852  loss_rpn_loc: 0.009127    time: 0.3717  last_time: 0.4130  data_time: 0.0368  last_data_time: 0.0788   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:36:50 d2.utils.events]: [0m eta: 0:33:21  iter: 4579  total_loss: 0.1536  loss_cls: 0.05533  loss_box_reg: 0.08226  loss_rpn_cls: 0.005585  loss_rpn_loc: 0.00824    time: 0.3716  last_time: 0.4069  data_time: 0.0322  last_data_time: 0.0734   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:36:57 d2.utils.events]: [0m eta: 0:33:13  iter: 4599  total_loss: 0.1613  loss_cls: 0.0569  loss_box_reg: 0.09029  loss_rpn_cls: 0.004478  loss_rpn_loc: 0.006301    time: 0.3716  last_time: 0.3616  data_time: 0.0273  last_data_time: 0.0379   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:37:05 d2.utils.events]: [0m eta: 0:33:06  iter: 4619  total_loss: 0.1658  loss_cls: 0.06049  loss_box_reg: 0.08561  loss_rpn_cls: 0.005867  loss_rpn_loc: 0.009411    time: 0.3716  last_time: 0.3721  data_time: 0.0315  last_data_time: 0.0116   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:37:12 d2.utils.events]: [0m eta: 0:32:58  iter: 4639  total_loss: 0.1435  loss_cls: 0.05516  loss_box_reg: 0.08157  loss_rpn_cls: 0.006322  loss_rpn_loc: 0.009826    time: 0.3716  last_time: 0.4517  data_time: 0.0367  last_data_time: 0.1158   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:37:19 d2.utils.events]: [0m eta: 0:32:51  iter: 4659  total_loss: 0.1713  loss_cls: 0.06076  loss_box_reg: 0.09137  loss_rpn_cls: 0.005382  loss_rpn_loc: 0.006483    time: 0.3716  last_time: 0.3380  data_time: 0.0265  last_data_time: 0.0110   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:37:26 d2.utils.events]: [0m eta: 0:32:43  iter: 4679  total_loss: 0.1709  loss_cls: 0.06213  loss_box_reg: 0.08339  loss_rpn_cls: 0.004471  loss_rpn_loc: 0.009242    time: 0.3715  last_time: 0.3112  data_time: 0.0255  last_data_time: 0.0181   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:37:34 d2.utils.events]: [0m eta: 0:32:38  iter: 4699  total_loss: 0.1645  loss_cls: 0.05517  loss_box_reg: 0.08966  loss_rpn_cls: 0.005007  loss_rpn_loc: 0.007227    time: 0.3715  last_time: 0.3911  data_time: 0.0379  last_data_time: 0.0092   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:37:41 d2.utils.events]: [0m eta: 0:32:33  iter: 4719  total_loss: 0.1707  loss_cls: 0.05756  loss_box_reg: 0.09807  loss_rpn_cls: 0.004433  loss_rpn_loc: 0.008975    time: 0.3715  last_time: 0.3601  data_time: 0.0330  last_data_time: 0.0281   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:37:49 d2.utils.events]: [0m eta: 0:32:27  iter: 4739  total_loss: 0.1716  loss_cls: 0.06276  loss_box_reg: 0.09285  loss_rpn_cls: 0.005853  loss_rpn_loc: 0.008084    time: 0.3716  last_time: 0.3820  data_time: 0.0346  last_data_time: 0.0277   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:37:56 d2.utils.events]: [0m eta: 0:32:21  iter: 4759  total_loss: 0.1649  loss_cls: 0.05527  loss_box_reg: 0.08867  loss_rpn_cls: 0.006408  loss_rpn_loc: 0.008037    time: 0.3715  last_time: 0.4209  data_time: 0.0319  last_data_time: 0.0259   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:38:04 d2.utils.events]: [0m eta: 0:32:15  iter: 4779  total_loss: 0.1585  loss_cls: 0.05678  loss_box_reg: 0.09044  loss_rpn_cls: 0.003746  loss_rpn_loc: 0.007369    time: 0.3716  last_time: 0.3590  data_time: 0.0375  last_data_time: 0.0096   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:38:11 d2.utils.events]: [0m eta: 0:32:07  iter: 4799  total_loss: 0.1567  loss_cls: 0.05683  loss_box_reg: 0.08459  loss_rpn_cls: 0.006927  loss_rpn_loc: 0.008606    time: 0.3716  last_time: 0.3864  data_time: 0.0342  last_data_time: 0.0051   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:38:19 d2.utils.events]: [0m eta: 0:32:00  iter: 4819  total_loss: 0.1527  loss_cls: 0.05617  loss_box_reg: 0.09014  loss_rpn_cls: 0.004645  loss_rpn_loc: 0.007273    time: 0.3716  last_time: 0.3464  data_time: 0.0283  last_data_time: 0.0281   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:38:26 d2.utils.events]: [0m eta: 0:31:51  iter: 4839  total_loss: 0.1615  loss_cls: 0.05589  loss_box_reg: 0.09549  loss_rpn_cls: 0.005623  loss_rpn_loc: 0.007079    time: 0.3716  last_time: 0.3495  data_time: 0.0384  last_data_time: 0.0379   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:38:34 d2.utils.events]: [0m eta: 0:31:41  iter: 4859  total_loss: 0.1426  loss_cls: 0.0495  loss_box_reg: 0.07756  loss_rpn_cls: 0.00513  loss_rpn_loc: 0.007713    time: 0.3716  last_time: 0.4044  data_time: 0.0327  last_data_time: 0.0434   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:38:41 d2.utils.events]: [0m eta: 0:31:33  iter: 4879  total_loss: 0.13  loss_cls: 0.04344  loss_box_reg: 0.07085  loss_rpn_cls: 0.005313  loss_rpn_loc: 0.006601    time: 0.3716  last_time: 0.3683  data_time: 0.0360  last_data_time: 0.0065   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:38:49 d2.utils.events]: [0m eta: 0:31:25  iter: 4899  total_loss: 0.1582  loss_cls: 0.05888  loss_box_reg: 0.09016  loss_rpn_cls: 0.004765  loss_rpn_loc: 0.007333    time: 0.3716  last_time: 0.3875  data_time: 0.0383  last_data_time: 0.0087   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:38:56 d2.utils.events]: [0m eta: 0:31:17  iter: 4919  total_loss: 0.1413  loss_cls: 0.04666  loss_box_reg: 0.08266  loss_rpn_cls: 0.004082  loss_rpn_loc: 0.005612    time: 0.3716  last_time: 0.3813  data_time: 0.0314  last_data_time: 0.0335   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:39:04 d2.utils.events]: [0m eta: 0:31:12  iter: 4939  total_loss: 0.1516  loss_cls: 0.05119  loss_box_reg: 0.08328  loss_rpn_cls: 0.005576  loss_rpn_loc: 0.007077    time: 0.3716  last_time: 0.3515  data_time: 0.0357  last_data_time: 0.0416   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:39:11 d2.utils.events]: [0m eta: 0:31:05  iter: 4959  total_loss: 0.1535  loss_cls: 0.05105  loss_box_reg: 0.08472  loss_rpn_cls: 0.005778  loss_rpn_loc: 0.006397    time: 0.3716  last_time: 0.4138  data_time: 0.0416  last_data_time: 0.1299   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:39:18 d2.utils.events]: [0m eta: 0:30:56  iter: 4979  total_loss: 0.1477  loss_cls: 0.05163  loss_box_reg: 0.0836  loss_rpn_cls: 0.004365  loss_rpn_loc: 0.007215    time: 0.3716  last_time: 0.3575  data_time: 0.0301  last_data_time: 0.0225   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:39:26 d2.data.datasets.coco]: [0mLoaded 177 images in COCO format from ../datasets/coco/annotations/dog_instances_val2017.json
[32m[11/11 22:39:26 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/11 22:39:26 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[32m[11/11 22:39:26 d2.data.common]: [0mSerializing 177 elements to byte tensors and concatenating them all ...
[32m[11/11 22:39:26 d2.data.common]: [0mSerialized dataset takes 0.24 MiB
[5m[31mWARNING[0m [32m[11/11 22:39:26 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/11 22:39:26 d2.utils.events]: [0m eta: 0:30:48  iter: 4999  total_loss: 0.1493  loss_cls: 0.04956  loss_box_reg: 0.07668  loss_rpn_cls: 0.004703  loss_rpn_loc: 0.006378    time: 0.3716  last_time: 0.3555  data_time: 0.0321  last_data_time: 0.0362   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:39:33 d2.utils.events]: [0m eta: 0:30:41  iter: 5019  total_loss: 0.1288  loss_cls: 0.04363  loss_box_reg: 0.07993  loss_rpn_cls: 0.003964  loss_rpn_loc: 0.006136    time: 0.3715  last_time: 0.3550  data_time: 0.0275  last_data_time: 0.0084   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:39:41 d2.utils.events]: [0m eta: 0:30:31  iter: 5039  total_loss: 0.1648  loss_cls: 0.06035  loss_box_reg: 0.09119  loss_rpn_cls: 0.00657  loss_rpn_loc: 0.007097    time: 0.3715  last_time: 0.3530  data_time: 0.0277  last_data_time: 0.0279   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:39:48 d2.utils.events]: [0m eta: 0:30:21  iter: 5059  total_loss: 0.1664  loss_cls: 0.05903  loss_box_reg: 0.1011  loss_rpn_cls: 0.005318  loss_rpn_loc: 0.008046    time: 0.3715  last_time: 0.3674  data_time: 0.0283  last_data_time: 0.0223   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:39:56 d2.utils.events]: [0m eta: 0:30:14  iter: 5079  total_loss: 0.1467  loss_cls: 0.04955  loss_box_reg: 0.08753  loss_rpn_cls: 0.003945  loss_rpn_loc: 0.006463    time: 0.3715  last_time: 0.4468  data_time: 0.0338  last_data_time: 0.0738   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:40:03 d2.utils.events]: [0m eta: 0:30:07  iter: 5099  total_loss: 0.1622  loss_cls: 0.0558  loss_box_reg: 0.0941  loss_rpn_cls: 0.006652  loss_rpn_loc: 0.00791    time: 0.3715  last_time: 0.3781  data_time: 0.0310  last_data_time: 0.1022   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:40:10 d2.utils.events]: [0m eta: 0:30:01  iter: 5119  total_loss: 0.1502  loss_cls: 0.04806  loss_box_reg: 0.08545  loss_rpn_cls: 0.004905  loss_rpn_loc: 0.007579    time: 0.3715  last_time: 0.3834  data_time: 0.0348  last_data_time: 0.0177   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:40:18 d2.utils.events]: [0m eta: 0:29:54  iter: 5139  total_loss: 0.1399  loss_cls: 0.04913  loss_box_reg: 0.08111  loss_rpn_cls: 0.004534  loss_rpn_loc: 0.005899    time: 0.3715  last_time: 0.3856  data_time: 0.0348  last_data_time: 0.0539   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:40:25 d2.utils.events]: [0m eta: 0:29:45  iter: 5159  total_loss: 0.1576  loss_cls: 0.05138  loss_box_reg: 0.08471  loss_rpn_cls: 0.004934  loss_rpn_loc: 0.007521    time: 0.3714  last_time: 0.3535  data_time: 0.0307  last_data_time: 0.0286   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:40:32 d2.utils.events]: [0m eta: 0:29:37  iter: 5179  total_loss: 0.172  loss_cls: 0.06764  loss_box_reg: 0.09487  loss_rpn_cls: 0.004848  loss_rpn_loc: 0.008956    time: 0.3714  last_time: 0.3497  data_time: 0.0307  last_data_time: 0.0053   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:40:40 d2.utils.events]: [0m eta: 0:29:30  iter: 5199  total_loss: 0.16  loss_cls: 0.05502  loss_box_reg: 0.08874  loss_rpn_cls: 0.004774  loss_rpn_loc: 0.007976    time: 0.3714  last_time: 0.3764  data_time: 0.0288  last_data_time: 0.0328   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:40:47 d2.utils.events]: [0m eta: 0:29:23  iter: 5219  total_loss: 0.1455  loss_cls: 0.05215  loss_box_reg: 0.07784  loss_rpn_cls: 0.003658  loss_rpn_loc: 0.006935    time: 0.3714  last_time: 0.4118  data_time: 0.0342  last_data_time: 0.0805   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:40:54 d2.utils.events]: [0m eta: 0:29:15  iter: 5239  total_loss: 0.1733  loss_cls: 0.06017  loss_box_reg: 0.09566  loss_rpn_cls: 0.004713  loss_rpn_loc: 0.008261    time: 0.3714  last_time: 0.3412  data_time: 0.0273  last_data_time: 0.0032   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:41:02 d2.utils.events]: [0m eta: 0:29:08  iter: 5259  total_loss: 0.1587  loss_cls: 0.05198  loss_box_reg: 0.0952  loss_rpn_cls: 0.00446  loss_rpn_loc: 0.008609    time: 0.3714  last_time: 0.3070  data_time: 0.0309  last_data_time: 0.0271   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:41:09 d2.utils.events]: [0m eta: 0:29:00  iter: 5279  total_loss: 0.1519  loss_cls: 0.05633  loss_box_reg: 0.08774  loss_rpn_cls: 0.004635  loss_rpn_loc: 0.007526    time: 0.3714  last_time: 0.3879  data_time: 0.0384  last_data_time: 0.0549   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:41:17 d2.utils.events]: [0m eta: 0:28:53  iter: 5299  total_loss: 0.1473  loss_cls: 0.05531  loss_box_reg: 0.07788  loss_rpn_cls: 0.005326  loss_rpn_loc: 0.006513    time: 0.3714  last_time: 0.3885  data_time: 0.0361  last_data_time: 0.0379   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:41:24 d2.utils.events]: [0m eta: 0:28:45  iter: 5319  total_loss: 0.1452  loss_cls: 0.0538  loss_box_reg: 0.08049  loss_rpn_cls: 0.003086  loss_rpn_loc: 0.007639    time: 0.3714  last_time: 0.3827  data_time: 0.0304  last_data_time: 0.0310   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:41:32 d2.utils.events]: [0m eta: 0:28:39  iter: 5339  total_loss: 0.1461  loss_cls: 0.047  loss_box_reg: 0.08597  loss_rpn_cls: 0.004999  loss_rpn_loc: 0.009168    time: 0.3714  last_time: 0.4277  data_time: 0.0368  last_data_time: 0.1154   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:41:39 d2.utils.events]: [0m eta: 0:28:33  iter: 5359  total_loss: 0.1635  loss_cls: 0.05393  loss_box_reg: 0.0938  loss_rpn_cls: 0.005622  loss_rpn_loc: 0.0111    time: 0.3714  last_time: 0.3517  data_time: 0.0280  last_data_time: 0.0102   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:41:47 d2.utils.events]: [0m eta: 0:28:24  iter: 5379  total_loss: 0.1564  loss_cls: 0.05755  loss_box_reg: 0.08704  loss_rpn_cls: 0.00436  loss_rpn_loc: 0.007276    time: 0.3714  last_time: 0.3641  data_time: 0.0398  last_data_time: 0.0458   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:41:54 d2.utils.events]: [0m eta: 0:28:18  iter: 5399  total_loss: 0.1676  loss_cls: 0.06253  loss_box_reg: 0.0892  loss_rpn_cls: 0.004462  loss_rpn_loc: 0.005993    time: 0.3714  last_time: 0.3950  data_time: 0.0353  last_data_time: 0.0346   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:42:01 d2.utils.events]: [0m eta: 0:28:10  iter: 5419  total_loss: 0.146  loss_cls: 0.05362  loss_box_reg: 0.07697  loss_rpn_cls: 0.004837  loss_rpn_loc: 0.007505    time: 0.3714  last_time: 0.3819  data_time: 0.0355  last_data_time: 0.0376   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:42:09 d2.utils.events]: [0m eta: 0:28:01  iter: 5439  total_loss: 0.1689  loss_cls: 0.05501  loss_box_reg: 0.09501  loss_rpn_cls: 0.005296  loss_rpn_loc: 0.007501    time: 0.3714  last_time: 0.3916  data_time: 0.0347  last_data_time: 0.0289   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:42:16 d2.utils.events]: [0m eta: 0:27:57  iter: 5459  total_loss: 0.16  loss_cls: 0.05214  loss_box_reg: 0.09033  loss_rpn_cls: 0.005931  loss_rpn_loc: 0.009156    time: 0.3714  last_time: 0.2890  data_time: 0.0352  last_data_time: 0.0111   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:42:24 d2.utils.events]: [0m eta: 0:27:49  iter: 5479  total_loss: 0.1392  loss_cls: 0.04858  loss_box_reg: 0.08264  loss_rpn_cls: 0.003983  loss_rpn_loc: 0.005979    time: 0.3714  last_time: 0.3268  data_time: 0.0300  last_data_time: 0.0073   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:42:31 d2.utils.events]: [0m eta: 0:27:40  iter: 5499  total_loss: 0.1478  loss_cls: 0.05432  loss_box_reg: 0.08405  loss_rpn_cls: 0.004667  loss_rpn_loc: 0.006093    time: 0.3714  last_time: 0.4054  data_time: 0.0321  last_data_time: 0.0697   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:42:38 d2.utils.events]: [0m eta: 0:27:32  iter: 5519  total_loss: 0.1458  loss_cls: 0.04742  loss_box_reg: 0.08081  loss_rpn_cls: 0.003295  loss_rpn_loc: 0.007617    time: 0.3714  last_time: 0.3439  data_time: 0.0369  last_data_time: 0.0260   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:42:46 d2.utils.events]: [0m eta: 0:27:25  iter: 5539  total_loss: 0.1484  loss_cls: 0.05422  loss_box_reg: 0.08073  loss_rpn_cls: 0.004717  loss_rpn_loc: 0.009246    time: 0.3714  last_time: 0.2896  data_time: 0.0382  last_data_time: 0.0268   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:42:53 d2.utils.events]: [0m eta: 0:27:20  iter: 5559  total_loss: 0.1612  loss_cls: 0.05157  loss_box_reg: 0.0921  loss_rpn_cls: 0.004091  loss_rpn_loc: 0.007958    time: 0.3714  last_time: 0.3712  data_time: 0.0309  last_data_time: 0.0114   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:43:01 d2.utils.events]: [0m eta: 0:27:15  iter: 5579  total_loss: 0.1294  loss_cls: 0.04255  loss_box_reg: 0.07469  loss_rpn_cls: 0.003836  loss_rpn_loc: 0.006148    time: 0.3714  last_time: 0.3918  data_time: 0.0374  last_data_time: 0.0157   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:43:09 d2.utils.events]: [0m eta: 0:27:11  iter: 5599  total_loss: 0.1505  loss_cls: 0.0517  loss_box_reg: 0.0786  loss_rpn_cls: 0.005259  loss_rpn_loc: 0.008412    time: 0.3715  last_time: 0.3879  data_time: 0.0357  last_data_time: 0.0296   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:43:16 d2.utils.events]: [0m eta: 0:27:03  iter: 5619  total_loss: 0.1493  loss_cls: 0.05034  loss_box_reg: 0.09008  loss_rpn_cls: 0.004342  loss_rpn_loc: 0.007806    time: 0.3714  last_time: 0.3769  data_time: 0.0306  last_data_time: 0.0646   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:43:23 d2.utils.events]: [0m eta: 0:26:56  iter: 5639  total_loss: 0.1457  loss_cls: 0.05008  loss_box_reg: 0.08198  loss_rpn_cls: 0.006217  loss_rpn_loc: 0.008436    time: 0.3714  last_time: 0.3620  data_time: 0.0346  last_data_time: 0.0512   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:43:31 d2.utils.events]: [0m eta: 0:26:51  iter: 5659  total_loss: 0.1691  loss_cls: 0.05598  loss_box_reg: 0.0938  loss_rpn_cls: 0.004872  loss_rpn_loc: 0.007771    time: 0.3715  last_time: 0.3974  data_time: 0.0350  last_data_time: 0.0265   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:43:38 d2.utils.events]: [0m eta: 0:26:44  iter: 5679  total_loss: 0.146  loss_cls: 0.04984  loss_box_reg: 0.08627  loss_rpn_cls: 0.005079  loss_rpn_loc: 0.01062    time: 0.3715  last_time: 0.3759  data_time: 0.0310  last_data_time: 0.0287   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:43:46 d2.utils.events]: [0m eta: 0:26:33  iter: 5699  total_loss: 0.1308  loss_cls: 0.04434  loss_box_reg: 0.07451  loss_rpn_cls: 0.004252  loss_rpn_loc: 0.007263    time: 0.3714  last_time: 0.3689  data_time: 0.0327  last_data_time: 0.0137   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:43:53 d2.utils.events]: [0m eta: 0:26:25  iter: 5719  total_loss: 0.156  loss_cls: 0.05414  loss_box_reg: 0.08717  loss_rpn_cls: 0.004849  loss_rpn_loc: 0.01019    time: 0.3714  last_time: 0.2995  data_time: 0.0350  last_data_time: 0.0106   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:44:01 d2.utils.events]: [0m eta: 0:26:19  iter: 5739  total_loss: 0.1487  loss_cls: 0.05165  loss_box_reg: 0.08699  loss_rpn_cls: 0.004624  loss_rpn_loc: 0.00848    time: 0.3715  last_time: 0.3862  data_time: 0.0330  last_data_time: 0.0264   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:44:08 d2.utils.events]: [0m eta: 0:26:14  iter: 5759  total_loss: 0.1369  loss_cls: 0.04684  loss_box_reg: 0.07673  loss_rpn_cls: 0.003676  loss_rpn_loc: 0.007027    time: 0.3714  last_time: 0.3775  data_time: 0.0322  last_data_time: 0.0957   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:44:16 d2.utils.events]: [0m eta: 0:26:06  iter: 5779  total_loss: 0.1329  loss_cls: 0.04406  loss_box_reg: 0.07809  loss_rpn_cls: 0.003397  loss_rpn_loc: 0.00544    time: 0.3715  last_time: 0.3923  data_time: 0.0362  last_data_time: 0.0356   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:44:23 d2.utils.events]: [0m eta: 0:25:59  iter: 5799  total_loss: 0.144  loss_cls: 0.04381  loss_box_reg: 0.08337  loss_rpn_cls: 0.004215  loss_rpn_loc: 0.00761    time: 0.3714  last_time: 0.3791  data_time: 0.0354  last_data_time: 0.0873   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:44:30 d2.utils.events]: [0m eta: 0:25:52  iter: 5819  total_loss: 0.1507  loss_cls: 0.05287  loss_box_reg: 0.08666  loss_rpn_cls: 0.004895  loss_rpn_loc: 0.007555    time: 0.3715  last_time: 0.3892  data_time: 0.0322  last_data_time: 0.0517   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:44:38 d2.utils.events]: [0m eta: 0:25:45  iter: 5839  total_loss: 0.1625  loss_cls: 0.05734  loss_box_reg: 0.095  loss_rpn_cls: 0.004343  loss_rpn_loc: 0.006024    time: 0.3715  last_time: 0.3606  data_time: 0.0352  last_data_time: 0.0086   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:44:45 d2.utils.events]: [0m eta: 0:25:37  iter: 5859  total_loss: 0.1588  loss_cls: 0.05629  loss_box_reg: 0.08451  loss_rpn_cls: 0.005804  loss_rpn_loc: 0.006673    time: 0.3715  last_time: 0.3540  data_time: 0.0323  last_data_time: 0.0500   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:44:53 d2.utils.events]: [0m eta: 0:25:30  iter: 5879  total_loss: 0.153  loss_cls: 0.05794  loss_box_reg: 0.08529  loss_rpn_cls: 0.004361  loss_rpn_loc: 0.006744    time: 0.3715  last_time: 0.3555  data_time: 0.0309  last_data_time: 0.0081   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:45:00 d2.utils.events]: [0m eta: 0:25:23  iter: 5899  total_loss: 0.1597  loss_cls: 0.05487  loss_box_reg: 0.08539  loss_rpn_cls: 0.005546  loss_rpn_loc: 0.008447    time: 0.3715  last_time: 0.4547  data_time: 0.0399  last_data_time: 0.0843   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:45:08 d2.utils.events]: [0m eta: 0:25:15  iter: 5919  total_loss: 0.1603  loss_cls: 0.05204  loss_box_reg: 0.08768  loss_rpn_cls: 0.004547  loss_rpn_loc: 0.008867    time: 0.3715  last_time: 0.3595  data_time: 0.0320  last_data_time: 0.0387   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:45:15 d2.utils.events]: [0m eta: 0:25:07  iter: 5939  total_loss: 0.145  loss_cls: 0.05215  loss_box_reg: 0.08148  loss_rpn_cls: 0.004273  loss_rpn_loc: 0.005918    time: 0.3715  last_time: 0.3531  data_time: 0.0369  last_data_time: 0.0145   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:45:23 d2.utils.events]: [0m eta: 0:25:00  iter: 5959  total_loss: 0.1664  loss_cls: 0.06001  loss_box_reg: 0.09797  loss_rpn_cls: 0.003933  loss_rpn_loc: 0.007106    time: 0.3715  last_time: 0.3414  data_time: 0.0320  last_data_time: 0.0142   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:45:30 d2.utils.events]: [0m eta: 0:24:52  iter: 5979  total_loss: 0.1712  loss_cls: 0.05669  loss_box_reg: 0.09561  loss_rpn_cls: 0.005057  loss_rpn_loc: 0.006338    time: 0.3715  last_time: 0.3714  data_time: 0.0362  last_data_time: 0.0294   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:45:38 d2.data.datasets.coco]: [0mLoaded 177 images in COCO format from ../datasets/coco/annotations/dog_instances_val2017.json
[32m[11/11 22:45:38 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/11 22:45:38 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[32m[11/11 22:45:38 d2.data.common]: [0mSerializing 177 elements to byte tensors and concatenating them all ...
[32m[11/11 22:45:38 d2.data.common]: [0mSerialized dataset takes 0.24 MiB
[5m[31mWARNING[0m [32m[11/11 22:45:38 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/11 22:45:38 d2.utils.events]: [0m eta: 0:24:46  iter: 5999  total_loss: 0.1421  loss_cls: 0.05016  loss_box_reg: 0.08503  loss_rpn_cls: 0.003672  loss_rpn_loc: 0.006088    time: 0.3715  last_time: 0.3897  data_time: 0.0335  last_data_time: 0.0308   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:45:45 d2.utils.events]: [0m eta: 0:24:38  iter: 6019  total_loss: 0.1553  loss_cls: 0.0565  loss_box_reg: 0.08099  loss_rpn_cls: 0.004517  loss_rpn_loc: 0.006169    time: 0.3715  last_time: 0.3739  data_time: 0.0278  last_data_time: 0.0592   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:45:53 d2.utils.events]: [0m eta: 0:24:33  iter: 6039  total_loss: 0.1413  loss_cls: 0.04892  loss_box_reg: 0.08073  loss_rpn_cls: 0.004418  loss_rpn_loc: 0.006783    time: 0.3715  last_time: 0.3842  data_time: 0.0327  last_data_time: 0.0202   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:46:00 d2.utils.events]: [0m eta: 0:24:27  iter: 6059  total_loss: 0.159  loss_cls: 0.04988  loss_box_reg: 0.08694  loss_rpn_cls: 0.003014  loss_rpn_loc: 0.007596    time: 0.3715  last_time: 0.4078  data_time: 0.0367  last_data_time: 0.0618   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:46:08 d2.utils.events]: [0m eta: 0:24:19  iter: 6079  total_loss: 0.1333  loss_cls: 0.04787  loss_box_reg: 0.07746  loss_rpn_cls: 0.003201  loss_rpn_loc: 0.00634    time: 0.3715  last_time: 0.3050  data_time: 0.0354  last_data_time: 0.0094   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:46:15 d2.utils.events]: [0m eta: 0:24:12  iter: 6099  total_loss: 0.1551  loss_cls: 0.05062  loss_box_reg: 0.08015  loss_rpn_cls: 0.004943  loss_rpn_loc: 0.009161    time: 0.3715  last_time: 0.3139  data_time: 0.0281  last_data_time: 0.0136   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:46:22 d2.utils.events]: [0m eta: 0:24:04  iter: 6119  total_loss: 0.1573  loss_cls: 0.05095  loss_box_reg: 0.08905  loss_rpn_cls: 0.005827  loss_rpn_loc: 0.00884    time: 0.3715  last_time: 0.3521  data_time: 0.0328  last_data_time: 0.0125   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:46:30 d2.utils.events]: [0m eta: 0:23:57  iter: 6139  total_loss: 0.1437  loss_cls: 0.04957  loss_box_reg: 0.08387  loss_rpn_cls: 0.00401  loss_rpn_loc: 0.006413    time: 0.3715  last_time: 0.3737  data_time: 0.0348  last_data_time: 0.0310   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:46:38 d2.utils.events]: [0m eta: 0:23:50  iter: 6159  total_loss: 0.1474  loss_cls: 0.04934  loss_box_reg: 0.08193  loss_rpn_cls: 0.003986  loss_rpn_loc: 0.007163    time: 0.3715  last_time: 0.4061  data_time: 0.0279  last_data_time: 0.0480   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:46:45 d2.utils.events]: [0m eta: 0:23:43  iter: 6179  total_loss: 0.1576  loss_cls: 0.05182  loss_box_reg: 0.09058  loss_rpn_cls: 0.003974  loss_rpn_loc: 0.006653    time: 0.3715  last_time: 0.4304  data_time: 0.0358  last_data_time: 0.0401   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:46:52 d2.utils.events]: [0m eta: 0:23:36  iter: 6199  total_loss: 0.167  loss_cls: 0.05855  loss_box_reg: 0.09186  loss_rpn_cls: 0.003857  loss_rpn_loc: 0.008187    time: 0.3715  last_time: 0.3667  data_time: 0.0326  last_data_time: 0.0111   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:47:00 d2.utils.events]: [0m eta: 0:23:28  iter: 6219  total_loss: 0.1457  loss_cls: 0.05043  loss_box_reg: 0.07808  loss_rpn_cls: 0.004793  loss_rpn_loc: 0.007275    time: 0.3715  last_time: 0.3220  data_time: 0.0327  last_data_time: 0.0638   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:47:07 d2.utils.events]: [0m eta: 0:23:21  iter: 6239  total_loss: 0.1495  loss_cls: 0.05349  loss_box_reg: 0.08563  loss_rpn_cls: 0.004415  loss_rpn_loc: 0.008048    time: 0.3715  last_time: 0.4479  data_time: 0.0338  last_data_time: 0.1241   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:47:15 d2.utils.events]: [0m eta: 0:23:15  iter: 6259  total_loss: 0.1415  loss_cls: 0.04985  loss_box_reg: 0.08706  loss_rpn_cls: 0.003182  loss_rpn_loc: 0.006063    time: 0.3715  last_time: 0.2927  data_time: 0.0282  last_data_time: 0.0103   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:47:22 d2.utils.events]: [0m eta: 0:23:07  iter: 6279  total_loss: 0.1717  loss_cls: 0.05594  loss_box_reg: 0.0962  loss_rpn_cls: 0.004211  loss_rpn_loc: 0.007349    time: 0.3715  last_time: 0.4051  data_time: 0.0344  last_data_time: 0.0611   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:47:30 d2.utils.events]: [0m eta: 0:23:00  iter: 6299  total_loss: 0.1562  loss_cls: 0.0559  loss_box_reg: 0.08394  loss_rpn_cls: 0.004085  loss_rpn_loc: 0.008797    time: 0.3716  last_time: 0.3315  data_time: 0.0359  last_data_time: 0.0138   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:47:38 d2.utils.events]: [0m eta: 0:22:53  iter: 6319  total_loss: 0.1657  loss_cls: 0.05814  loss_box_reg: 0.08896  loss_rpn_cls: 0.005519  loss_rpn_loc: 0.007395    time: 0.3716  last_time: 0.3926  data_time: 0.0342  last_data_time: 0.0289   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:47:45 d2.utils.events]: [0m eta: 0:22:45  iter: 6339  total_loss: 0.1513  loss_cls: 0.05514  loss_box_reg: 0.08686  loss_rpn_cls: 0.004381  loss_rpn_loc: 0.00634    time: 0.3716  last_time: 0.3870  data_time: 0.0316  last_data_time: 0.0356   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:47:53 d2.utils.events]: [0m eta: 0:22:38  iter: 6359  total_loss: 0.1398  loss_cls: 0.04804  loss_box_reg: 0.08019  loss_rpn_cls: 0.003719  loss_rpn_loc: 0.007125    time: 0.3716  last_time: 0.3830  data_time: 0.0327  last_data_time: 0.0198   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:48:00 d2.utils.events]: [0m eta: 0:22:31  iter: 6379  total_loss: 0.1484  loss_cls: 0.05379  loss_box_reg: 0.08037  loss_rpn_cls: 0.004598  loss_rpn_loc: 0.007107    time: 0.3716  last_time: 0.3716  data_time: 0.0306  last_data_time: 0.0237   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:48:07 d2.utils.events]: [0m eta: 0:22:22  iter: 6399  total_loss: 0.1508  loss_cls: 0.05261  loss_box_reg: 0.08988  loss_rpn_cls: 0.00301  loss_rpn_loc: 0.006818    time: 0.3715  last_time: 0.3573  data_time: 0.0298  last_data_time: 0.0547   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:48:15 d2.utils.events]: [0m eta: 0:22:15  iter: 6419  total_loss: 0.188  loss_cls: 0.06354  loss_box_reg: 0.1012  loss_rpn_cls: 0.003776  loss_rpn_loc: 0.008361    time: 0.3715  last_time: 0.3510  data_time: 0.0310  last_data_time: 0.0122   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:48:22 d2.utils.events]: [0m eta: 0:22:08  iter: 6439  total_loss: 0.1512  loss_cls: 0.05196  loss_box_reg: 0.08535  loss_rpn_cls: 0.004601  loss_rpn_loc: 0.006833    time: 0.3715  last_time: 0.3374  data_time: 0.0356  last_data_time: 0.0172   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:48:29 d2.utils.events]: [0m eta: 0:22:00  iter: 6459  total_loss: 0.1597  loss_cls: 0.05379  loss_box_reg: 0.08421  loss_rpn_cls: 0.005152  loss_rpn_loc: 0.006909    time: 0.3715  last_time: 0.3977  data_time: 0.0306  last_data_time: 0.0120   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:48:37 d2.utils.events]: [0m eta: 0:21:53  iter: 6479  total_loss: 0.1448  loss_cls: 0.05628  loss_box_reg: 0.07981  loss_rpn_cls: 0.00382  loss_rpn_loc: 0.006024    time: 0.3715  last_time: 0.4138  data_time: 0.0357  last_data_time: 0.0926   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:48:44 d2.utils.events]: [0m eta: 0:21:45  iter: 6499  total_loss: 0.1417  loss_cls: 0.04625  loss_box_reg: 0.07633  loss_rpn_cls: 0.006132  loss_rpn_loc: 0.006005    time: 0.3715  last_time: 0.3572  data_time: 0.0297  last_data_time: 0.0053   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:48:51 d2.utils.events]: [0m eta: 0:21:37  iter: 6519  total_loss: 0.1479  loss_cls: 0.0501  loss_box_reg: 0.08956  loss_rpn_cls: 0.004279  loss_rpn_loc: 0.008337    time: 0.3715  last_time: 0.3319  data_time: 0.0351  last_data_time: 0.0119   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:48:59 d2.utils.events]: [0m eta: 0:21:30  iter: 6539  total_loss: 0.1209  loss_cls: 0.04526  loss_box_reg: 0.06894  loss_rpn_cls: 0.003351  loss_rpn_loc: 0.006689    time: 0.3715  last_time: 0.3748  data_time: 0.0351  last_data_time: 0.0078   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:49:06 d2.utils.events]: [0m eta: 0:21:24  iter: 6559  total_loss: 0.1487  loss_cls: 0.05044  loss_box_reg: 0.07674  loss_rpn_cls: 0.004102  loss_rpn_loc: 0.006666    time: 0.3715  last_time: 0.4083  data_time: 0.0349  last_data_time: 0.0314   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:49:14 d2.utils.events]: [0m eta: 0:21:17  iter: 6579  total_loss: 0.1323  loss_cls: 0.04422  loss_box_reg: 0.07777  loss_rpn_cls: 0.004968  loss_rpn_loc: 0.008014    time: 0.3715  last_time: 0.3717  data_time: 0.0331  last_data_time: 0.0081   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:49:21 d2.utils.events]: [0m eta: 0:21:08  iter: 6599  total_loss: 0.1574  loss_cls: 0.04588  loss_box_reg: 0.08833  loss_rpn_cls: 0.005727  loss_rpn_loc: 0.007727    time: 0.3715  last_time: 0.3697  data_time: 0.0315  last_data_time: 0.0136   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:49:29 d2.utils.events]: [0m eta: 0:21:02  iter: 6619  total_loss: 0.1312  loss_cls: 0.04312  loss_box_reg: 0.0747  loss_rpn_cls: 0.005205  loss_rpn_loc: 0.008501    time: 0.3716  last_time: 0.3846  data_time: 0.0362  last_data_time: 0.0148   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:49:37 d2.utils.events]: [0m eta: 0:20:55  iter: 6639  total_loss: 0.1364  loss_cls: 0.04693  loss_box_reg: 0.07831  loss_rpn_cls: 0.003683  loss_rpn_loc: 0.005865    time: 0.3716  last_time: 0.3479  data_time: 0.0359  last_data_time: 0.0153   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:49:44 d2.utils.events]: [0m eta: 0:20:48  iter: 6659  total_loss: 0.1417  loss_cls: 0.05222  loss_box_reg: 0.07841  loss_rpn_cls: 0.003581  loss_rpn_loc: 0.005652    time: 0.3716  last_time: 0.4126  data_time: 0.0348  last_data_time: 0.0451   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:49:51 d2.utils.events]: [0m eta: 0:20:39  iter: 6679  total_loss: 0.1184  loss_cls: 0.03961  loss_box_reg: 0.06946  loss_rpn_cls: 0.003027  loss_rpn_loc: 0.006136    time: 0.3716  last_time: 0.3437  data_time: 0.0259  last_data_time: 0.0568   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:49:59 d2.utils.events]: [0m eta: 0:20:33  iter: 6699  total_loss: 0.1455  loss_cls: 0.04577  loss_box_reg: 0.08354  loss_rpn_cls: 0.004731  loss_rpn_loc: 0.008697    time: 0.3716  last_time: 0.4166  data_time: 0.0336  last_data_time: 0.0540   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:50:06 d2.utils.events]: [0m eta: 0:20:26  iter: 6719  total_loss: 0.1487  loss_cls: 0.05003  loss_box_reg: 0.09164  loss_rpn_cls: 0.003522  loss_rpn_loc: 0.006504    time: 0.3716  last_time: 0.4133  data_time: 0.0329  last_data_time: 0.0288   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:50:14 d2.utils.events]: [0m eta: 0:20:17  iter: 6739  total_loss: 0.131  loss_cls: 0.04356  loss_box_reg: 0.07869  loss_rpn_cls: 0.00314  loss_rpn_loc: 0.006461    time: 0.3716  last_time: 0.3709  data_time: 0.0296  last_data_time: 0.0125   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:50:21 d2.utils.events]: [0m eta: 0:20:10  iter: 6759  total_loss: 0.1173  loss_cls: 0.04178  loss_box_reg: 0.06835  loss_rpn_cls: 0.004029  loss_rpn_loc: 0.005857    time: 0.3716  last_time: 0.3774  data_time: 0.0351  last_data_time: 0.0217   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:50:30 d2.utils.events]: [0m eta: 0:20:04  iter: 6779  total_loss: 0.1426  loss_cls: 0.05342  loss_box_reg: 0.08139  loss_rpn_cls: 0.004055  loss_rpn_loc: 0.007014    time: 0.3718  last_time: 0.4634  data_time: 0.0486  last_data_time: 0.0808   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:50:37 d2.utils.events]: [0m eta: 0:19:56  iter: 6799  total_loss: 0.1403  loss_cls: 0.04899  loss_box_reg: 0.07895  loss_rpn_cls: 0.005134  loss_rpn_loc: 0.007668    time: 0.3717  last_time: 0.3194  data_time: 0.0293  last_data_time: 0.0340   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:50:43 d2.utils.events]: [0m eta: 0:19:45  iter: 6819  total_loss: 0.1408  loss_cls: 0.04706  loss_box_reg: 0.08154  loss_rpn_cls: 0.002853  loss_rpn_loc: 0.00629    time: 0.3716  last_time: 0.3175  data_time: 0.0255  last_data_time: 0.0281   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:50:50 d2.utils.events]: [0m eta: 0:19:35  iter: 6839  total_loss: 0.1443  loss_cls: 0.04843  loss_box_reg: 0.07931  loss_rpn_cls: 0.0032  loss_rpn_loc: 0.00687    time: 0.3714  last_time: 0.3195  data_time: 0.0260  last_data_time: 0.0338   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:50:56 d2.utils.events]: [0m eta: 0:19:25  iter: 6859  total_loss: 0.1381  loss_cls: 0.04718  loss_box_reg: 0.07337  loss_rpn_cls: 0.004785  loss_rpn_loc: 0.0076    time: 0.3712  last_time: 0.2882  data_time: 0.0221  last_data_time: 0.0044   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:51:02 d2.utils.events]: [0m eta: 0:19:14  iter: 6879  total_loss: 0.154  loss_cls: 0.05601  loss_box_reg: 0.08373  loss_rpn_cls: 0.003697  loss_rpn_loc: 0.008945    time: 0.3710  last_time: 0.3066  data_time: 0.0236  last_data_time: 0.0242   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:51:08 d2.utils.events]: [0m eta: 0:19:03  iter: 6899  total_loss: 0.1359  loss_cls: 0.04943  loss_box_reg: 0.07302  loss_rpn_cls: 0.005813  loss_rpn_loc: 0.007378    time: 0.3708  last_time: 0.2950  data_time: 0.0230  last_data_time: 0.0133   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:51:14 d2.utils.events]: [0m eta: 0:18:53  iter: 6919  total_loss: 0.1558  loss_cls: 0.05245  loss_box_reg: 0.08469  loss_rpn_cls: 0.004683  loss_rpn_loc: 0.006669    time: 0.3707  last_time: 0.3197  data_time: 0.0210  last_data_time: 0.0116   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:51:21 d2.utils.events]: [0m eta: 0:18:42  iter: 6939  total_loss: 0.1465  loss_cls: 0.05236  loss_box_reg: 0.07848  loss_rpn_cls: 0.004489  loss_rpn_loc: 0.007508    time: 0.3705  last_time: 0.3028  data_time: 0.0247  last_data_time: 0.0231   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:51:27 d2.utils.events]: [0m eta: 0:18:32  iter: 6959  total_loss: 0.1634  loss_cls: 0.05579  loss_box_reg: 0.08646  loss_rpn_cls: 0.003479  loss_rpn_loc: 0.007699    time: 0.3704  last_time: 0.3246  data_time: 0.0260  last_data_time: 0.0369   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:51:33 d2.utils.events]: [0m eta: 0:18:21  iter: 6979  total_loss: 0.1293  loss_cls: 0.04622  loss_box_reg: 0.07388  loss_rpn_cls: 0.004502  loss_rpn_loc: 0.007109    time: 0.3702  last_time: 0.3263  data_time: 0.0254  last_data_time: 0.0202   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:51:40 d2.data.datasets.coco]: [0mLoaded 177 images in COCO format from ../datasets/coco/annotations/dog_instances_val2017.json
[32m[11/11 22:51:40 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/11 22:51:40 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[32m[11/11 22:51:40 d2.data.common]: [0mSerializing 177 elements to byte tensors and concatenating them all ...
[32m[11/11 22:51:40 d2.data.common]: [0mSerialized dataset takes 0.24 MiB
[5m[31mWARNING[0m [32m[11/11 22:51:40 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/11 22:51:40 d2.utils.events]: [0m eta: 0:18:06  iter: 6999  total_loss: 0.1492  loss_cls: 0.04635  loss_box_reg: 0.09042  loss_rpn_cls: 0.005639  loss_rpn_loc: 0.007485    time: 0.3701  last_time: 0.3029  data_time: 0.0247  last_data_time: 0.0203   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:51:47 d2.utils.events]: [0m eta: 0:17:57  iter: 7019  total_loss: 0.1304  loss_cls: 0.04588  loss_box_reg: 0.068  loss_rpn_cls: 0.00389  loss_rpn_loc: 0.00674    time: 0.3699  last_time: 0.3249  data_time: 0.0263  last_data_time: 0.0225   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:51:53 d2.utils.events]: [0m eta: 0:17:45  iter: 7039  total_loss: 0.1399  loss_cls: 0.04859  loss_box_reg: 0.08193  loss_rpn_cls: 0.004057  loss_rpn_loc: 0.006859    time: 0.3698  last_time: 0.3237  data_time: 0.0260  last_data_time: 0.0364   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:51:59 d2.utils.events]: [0m eta: 0:17:31  iter: 7059  total_loss: 0.1305  loss_cls: 0.04422  loss_box_reg: 0.07848  loss_rpn_cls: 0.003593  loss_rpn_loc: 0.007152    time: 0.3696  last_time: 0.3060  data_time: 0.0242  last_data_time: 0.0215   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:52:06 d2.utils.events]: [0m eta: 0:17:20  iter: 7079  total_loss: 0.1338  loss_cls: 0.04393  loss_box_reg: 0.07482  loss_rpn_cls: 0.003452  loss_rpn_loc: 0.006709    time: 0.3695  last_time: 0.3625  data_time: 0.0256  last_data_time: 0.0505   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:52:12 d2.utils.events]: [0m eta: 0:17:09  iter: 7099  total_loss: 0.156  loss_cls: 0.04787  loss_box_reg: 0.09399  loss_rpn_cls: 0.004013  loss_rpn_loc: 0.007401    time: 0.3693  last_time: 0.3434  data_time: 0.0250  last_data_time: 0.0334   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:52:19 d2.utils.events]: [0m eta: 0:16:55  iter: 7119  total_loss: 0.1524  loss_cls: 0.04883  loss_box_reg: 0.0902  loss_rpn_cls: 0.004437  loss_rpn_loc: 0.007775    time: 0.3692  last_time: 0.3080  data_time: 0.0227  last_data_time: 0.0073   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:52:25 d2.utils.events]: [0m eta: 0:16:40  iter: 7139  total_loss: 0.1444  loss_cls: 0.0472  loss_box_reg: 0.0827  loss_rpn_cls: 0.00467  loss_rpn_loc: 0.00716    time: 0.3690  last_time: 0.3021  data_time: 0.0228  last_data_time: 0.0159   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:52:31 d2.utils.events]: [0m eta: 0:16:26  iter: 7159  total_loss: 0.1407  loss_cls: 0.04961  loss_box_reg: 0.08677  loss_rpn_cls: 0.003766  loss_rpn_loc: 0.006105    time: 0.3689  last_time: 0.2867  data_time: 0.0253  last_data_time: 0.0045   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:52:38 d2.utils.events]: [0m eta: 0:16:13  iter: 7179  total_loss: 0.1503  loss_cls: 0.04941  loss_box_reg: 0.08376  loss_rpn_cls: 0.003977  loss_rpn_loc: 0.006402    time: 0.3688  last_time: 0.3408  data_time: 0.0270  last_data_time: 0.0340   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:52:44 d2.utils.events]: [0m eta: 0:16:00  iter: 7199  total_loss: 0.1363  loss_cls: 0.04566  loss_box_reg: 0.07794  loss_rpn_cls: 0.004887  loss_rpn_loc: 0.008114    time: 0.3686  last_time: 0.3373  data_time: 0.0229  last_data_time: 0.0360   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:52:50 d2.utils.events]: [0m eta: 0:15:48  iter: 7219  total_loss: 0.1494  loss_cls: 0.04902  loss_box_reg: 0.08049  loss_rpn_cls: 0.004574  loss_rpn_loc: 0.006777    time: 0.3685  last_time: 0.2999  data_time: 0.0239  last_data_time: 0.0060   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:52:56 d2.utils.events]: [0m eta: 0:15:37  iter: 7239  total_loss: 0.1353  loss_cls: 0.04254  loss_box_reg: 0.08313  loss_rpn_cls: 0.004527  loss_rpn_loc: 0.007138    time: 0.3683  last_time: 0.3424  data_time: 0.0258  last_data_time: 0.0292   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:53:03 d2.utils.events]: [0m eta: 0:15:24  iter: 7259  total_loss: 0.1329  loss_cls: 0.04454  loss_box_reg: 0.08118  loss_rpn_cls: 0.003449  loss_rpn_loc: 0.004979    time: 0.3682  last_time: 0.3127  data_time: 0.0246  last_data_time: 0.0201   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:53:09 d2.utils.events]: [0m eta: 0:15:13  iter: 7279  total_loss: 0.1411  loss_cls: 0.05109  loss_box_reg: 0.0789  loss_rpn_cls: 0.003697  loss_rpn_loc: 0.006894    time: 0.3680  last_time: 0.3324  data_time: 0.0264  last_data_time: 0.0322   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:53:15 d2.utils.events]: [0m eta: 0:15:02  iter: 7299  total_loss: 0.1349  loss_cls: 0.04596  loss_box_reg: 0.08279  loss_rpn_cls: 0.002814  loss_rpn_loc: 0.006138    time: 0.3679  last_time: 0.3200  data_time: 0.0235  last_data_time: 0.0176   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:53:22 d2.utils.events]: [0m eta: 0:14:52  iter: 7319  total_loss: 0.1233  loss_cls: 0.04495  loss_box_reg: 0.06817  loss_rpn_cls: 0.005746  loss_rpn_loc: 0.00709    time: 0.3677  last_time: 0.3135  data_time: 0.0219  last_data_time: 0.0151   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:53:28 d2.utils.events]: [0m eta: 0:14:39  iter: 7339  total_loss: 0.1479  loss_cls: 0.04628  loss_box_reg: 0.0891  loss_rpn_cls: 0.00461  loss_rpn_loc: 0.007404    time: 0.3676  last_time: 0.2863  data_time: 0.0247  last_data_time: 0.0220   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:53:34 d2.utils.events]: [0m eta: 0:14:28  iter: 7359  total_loss: 0.1388  loss_cls: 0.05356  loss_box_reg: 0.077  loss_rpn_cls: 0.00421  loss_rpn_loc: 0.008053    time: 0.3675  last_time: 0.3344  data_time: 0.0259  last_data_time: 0.0344   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:53:41 d2.utils.events]: [0m eta: 0:14:19  iter: 7379  total_loss: 0.1378  loss_cls: 0.0497  loss_box_reg: 0.08382  loss_rpn_cls: 0.003879  loss_rpn_loc: 0.007092    time: 0.3673  last_time: 0.4075  data_time: 0.0230  last_data_time: 0.0378   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:53:48 d2.utils.events]: [0m eta: 0:14:13  iter: 7399  total_loss: 0.1407  loss_cls: 0.05375  loss_box_reg: 0.08115  loss_rpn_cls: 0.003995  loss_rpn_loc: 0.007092    time: 0.3674  last_time: 0.3244  data_time: 0.0241  last_data_time: 0.0292   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:53:56 d2.utils.events]: [0m eta: 0:14:06  iter: 7419  total_loss: 0.126  loss_cls: 0.04062  loss_box_reg: 0.07168  loss_rpn_cls: 0.004916  loss_rpn_loc: 0.005132    time: 0.3674  last_time: 0.3466  data_time: 0.0240  last_data_time: 0.0109   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:54:03 d2.utils.events]: [0m eta: 0:14:00  iter: 7439  total_loss: 0.1464  loss_cls: 0.04578  loss_box_reg: 0.09137  loss_rpn_cls: 0.004006  loss_rpn_loc: 0.006031    time: 0.3674  last_time: 0.3958  data_time: 0.0275  last_data_time: 0.0437   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:54:11 d2.utils.events]: [0m eta: 0:13:54  iter: 7459  total_loss: 0.1398  loss_cls: 0.04692  loss_box_reg: 0.08234  loss_rpn_cls: 0.003768  loss_rpn_loc: 0.006703    time: 0.3674  last_time: 0.3599  data_time: 0.0260  last_data_time: 0.0251   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:54:18 d2.utils.events]: [0m eta: 0:13:47  iter: 7479  total_loss: 0.1435  loss_cls: 0.04723  loss_box_reg: 0.07581  loss_rpn_cls: 0.003745  loss_rpn_loc: 0.007019    time: 0.3674  last_time: 0.3696  data_time: 0.0282  last_data_time: 0.0580   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:54:24 d2.utils.events]: [0m eta: 0:13:38  iter: 7499  total_loss: 0.1387  loss_cls: 0.0479  loss_box_reg: 0.08271  loss_rpn_cls: 0.004887  loss_rpn_loc: 0.005446    time: 0.3673  last_time: 0.3082  data_time: 0.0244  last_data_time: 0.0125   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:54:31 d2.utils.events]: [0m eta: 0:13:30  iter: 7519  total_loss: 0.1434  loss_cls: 0.04812  loss_box_reg: 0.07922  loss_rpn_cls: 0.00361  loss_rpn_loc: 0.006978    time: 0.3672  last_time: 0.3273  data_time: 0.0258  last_data_time: 0.0332   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:54:37 d2.utils.events]: [0m eta: 0:13:23  iter: 7539  total_loss: 0.1411  loss_cls: 0.04642  loss_box_reg: 0.07342  loss_rpn_cls: 0.00579  loss_rpn_loc: 0.009135    time: 0.3670  last_time: 0.3366  data_time: 0.0248  last_data_time: 0.0345   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:54:44 d2.utils.events]: [0m eta: 0:13:15  iter: 7559  total_loss: 0.1327  loss_cls: 0.04384  loss_box_reg: 0.07711  loss_rpn_cls: 0.004089  loss_rpn_loc: 0.007244    time: 0.3669  last_time: 0.3242  data_time: 0.0245  last_data_time: 0.0373   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:54:50 d2.utils.events]: [0m eta: 0:13:07  iter: 7579  total_loss: 0.1416  loss_cls: 0.04744  loss_box_reg: 0.08758  loss_rpn_cls: 0.004393  loss_rpn_loc: 0.006545    time: 0.3668  last_time: 0.3415  data_time: 0.0243  last_data_time: 0.0357   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:54:57 d2.utils.events]: [0m eta: 0:13:00  iter: 7599  total_loss: 0.1529  loss_cls: 0.0529  loss_box_reg: 0.0901  loss_rpn_cls: 0.004026  loss_rpn_loc: 0.007377    time: 0.3667  last_time: 0.3447  data_time: 0.0257  last_data_time: 0.0200   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:55:03 d2.utils.events]: [0m eta: 0:12:52  iter: 7619  total_loss: 0.1315  loss_cls: 0.0392  loss_box_reg: 0.07464  loss_rpn_cls: 0.00324  loss_rpn_loc: 0.00701    time: 0.3666  last_time: 0.3188  data_time: 0.0253  last_data_time: 0.0415   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:55:10 d2.utils.events]: [0m eta: 0:12:44  iter: 7639  total_loss: 0.1448  loss_cls: 0.05051  loss_box_reg: 0.08108  loss_rpn_cls: 0.004413  loss_rpn_loc: 0.007708    time: 0.3665  last_time: 0.3088  data_time: 0.0256  last_data_time: 0.0074   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:55:16 d2.utils.events]: [0m eta: 0:12:36  iter: 7659  total_loss: 0.1441  loss_cls: 0.04884  loss_box_reg: 0.07918  loss_rpn_cls: 0.003282  loss_rpn_loc: 0.006302    time: 0.3663  last_time: 0.3398  data_time: 0.0262  last_data_time: 0.0368   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:55:22 d2.utils.events]: [0m eta: 0:12:29  iter: 7679  total_loss: 0.1388  loss_cls: 0.0494  loss_box_reg: 0.07167  loss_rpn_cls: 0.003078  loss_rpn_loc: 0.006601    time: 0.3662  last_time: 0.3137  data_time: 0.0252  last_data_time: 0.0175   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:55:29 d2.utils.events]: [0m eta: 0:12:22  iter: 7699  total_loss: 0.14  loss_cls: 0.04588  loss_box_reg: 0.08566  loss_rpn_cls: 0.003619  loss_rpn_loc: 0.006393    time: 0.3661  last_time: 0.3265  data_time: 0.0238  last_data_time: 0.0207   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:55:35 d2.utils.events]: [0m eta: 0:12:14  iter: 7719  total_loss: 0.1301  loss_cls: 0.04234  loss_box_reg: 0.07565  loss_rpn_cls: 0.004393  loss_rpn_loc: 0.007206    time: 0.3659  last_time: 0.3241  data_time: 0.0249  last_data_time: 0.0366   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:55:41 d2.utils.events]: [0m eta: 0:12:06  iter: 7739  total_loss: 0.1258  loss_cls: 0.04373  loss_box_reg: 0.07501  loss_rpn_cls: 0.004107  loss_rpn_loc: 0.008556    time: 0.3658  last_time: 0.3014  data_time: 0.0238  last_data_time: 0.0032   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:55:48 d2.utils.events]: [0m eta: 0:11:59  iter: 7759  total_loss: 0.1485  loss_cls: 0.04643  loss_box_reg: 0.08953  loss_rpn_cls: 0.00307  loss_rpn_loc: 0.008658    time: 0.3657  last_time: 0.3282  data_time: 0.0257  last_data_time: 0.0343   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:55:54 d2.utils.events]: [0m eta: 0:11:52  iter: 7779  total_loss: 0.1227  loss_cls: 0.03991  loss_box_reg: 0.07124  loss_rpn_cls: 0.003849  loss_rpn_loc: 0.00672    time: 0.3656  last_time: 0.3266  data_time: 0.0241  last_data_time: 0.0328   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:56:01 d2.utils.events]: [0m eta: 0:11:45  iter: 7799  total_loss: 0.1155  loss_cls: 0.03711  loss_box_reg: 0.07018  loss_rpn_cls: 0.003505  loss_rpn_loc: 0.005415    time: 0.3655  last_time: 0.2977  data_time: 0.0251  last_data_time: 0.0198   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:56:07 d2.utils.events]: [0m eta: 0:11:39  iter: 7819  total_loss: 0.1364  loss_cls: 0.04338  loss_box_reg: 0.08409  loss_rpn_cls: 0.00456  loss_rpn_loc: 0.006968    time: 0.3654  last_time: 0.2944  data_time: 0.0249  last_data_time: 0.0138   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:56:13 d2.utils.events]: [0m eta: 0:11:33  iter: 7839  total_loss: 0.1464  loss_cls: 0.04847  loss_box_reg: 0.09108  loss_rpn_cls: 0.003809  loss_rpn_loc: 0.006642    time: 0.3652  last_time: 0.3193  data_time: 0.0237  last_data_time: 0.0343   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:56:20 d2.utils.events]: [0m eta: 0:11:27  iter: 7859  total_loss: 0.1504  loss_cls: 0.05077  loss_box_reg: 0.0889  loss_rpn_cls: 0.0041  loss_rpn_loc: 0.008862    time: 0.3651  last_time: 0.3340  data_time: 0.0271  last_data_time: 0.0186   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:56:26 d2.utils.events]: [0m eta: 0:11:22  iter: 7879  total_loss: 0.1139  loss_cls: 0.03878  loss_box_reg: 0.07206  loss_rpn_cls: 0.003632  loss_rpn_loc: 0.006076    time: 0.3650  last_time: 0.3145  data_time: 0.0279  last_data_time: 0.0105   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:56:33 d2.utils.events]: [0m eta: 0:11:16  iter: 7899  total_loss: 0.1306  loss_cls: 0.0477  loss_box_reg: 0.07547  loss_rpn_cls: 0.004655  loss_rpn_loc: 0.005565    time: 0.3649  last_time: 0.3316  data_time: 0.0247  last_data_time: 0.0333   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:56:39 d2.utils.events]: [0m eta: 0:11:10  iter: 7919  total_loss: 0.168  loss_cls: 0.05477  loss_box_reg: 0.08743  loss_rpn_cls: 0.003365  loss_rpn_loc: 0.007614    time: 0.3648  last_time: 0.3558  data_time: 0.0255  last_data_time: 0.0431   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:56:46 d2.utils.events]: [0m eta: 0:11:04  iter: 7939  total_loss: 0.129  loss_cls: 0.04605  loss_box_reg: 0.07912  loss_rpn_cls: 0.002894  loss_rpn_loc: 0.00625    time: 0.3647  last_time: 0.3533  data_time: 0.0249  last_data_time: 0.0496   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:56:52 d2.utils.events]: [0m eta: 0:10:57  iter: 7959  total_loss: 0.122  loss_cls: 0.04212  loss_box_reg: 0.07101  loss_rpn_cls: 0.003221  loss_rpn_loc: 0.007933    time: 0.3646  last_time: 0.3280  data_time: 0.0228  last_data_time: 0.0348   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:56:58 d2.utils.events]: [0m eta: 0:10:50  iter: 7979  total_loss: 0.147  loss_cls: 0.0484  loss_box_reg: 0.0851  loss_rpn_cls: 0.00498  loss_rpn_loc: 0.007469    time: 0.3644  last_time: 0.3327  data_time: 0.0241  last_data_time: 0.0358   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:57:05 d2.data.datasets.coco]: [0mLoaded 177 images in COCO format from ../datasets/coco/annotations/dog_instances_val2017.json
[32m[11/11 22:57:05 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/11 22:57:05 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[32m[11/11 22:57:05 d2.data.common]: [0mSerializing 177 elements to byte tensors and concatenating them all ...
[32m[11/11 22:57:05 d2.data.common]: [0mSerialized dataset takes 0.24 MiB
[5m[31mWARNING[0m [32m[11/11 22:57:05 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/11 22:57:05 d2.utils.events]: [0m eta: 0:10:44  iter: 7999  total_loss: 0.1348  loss_cls: 0.04869  loss_box_reg: 0.07413  loss_rpn_cls: 0.003823  loss_rpn_loc: 0.006573    time: 0.3643  last_time: 0.3235  data_time: 0.0244  last_data_time: 0.0284   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:57:11 d2.utils.events]: [0m eta: 0:10:37  iter: 8019  total_loss: 0.1191  loss_cls: 0.04165  loss_box_reg: 0.07105  loss_rpn_cls: 0.002392  loss_rpn_loc: 0.006341    time: 0.3642  last_time: 0.3527  data_time: 0.0264  last_data_time: 0.0475   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:57:18 d2.utils.events]: [0m eta: 0:10:31  iter: 8039  total_loss: 0.1434  loss_cls: 0.04536  loss_box_reg: 0.07703  loss_rpn_cls: 0.002971  loss_rpn_loc: 0.007713    time: 0.3641  last_time: 0.3056  data_time: 0.0229  last_data_time: 0.0045   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:57:24 d2.utils.events]: [0m eta: 0:10:25  iter: 8059  total_loss: 0.1335  loss_cls: 0.04164  loss_box_reg: 0.07702  loss_rpn_cls: 0.00463  loss_rpn_loc: 0.009244    time: 0.3640  last_time: 0.3877  data_time: 0.0260  last_data_time: 0.0084   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:57:32 d2.utils.events]: [0m eta: 0:10:19  iter: 8079  total_loss: 0.1183  loss_cls: 0.04208  loss_box_reg: 0.06775  loss_rpn_cls: 0.003838  loss_rpn_loc: 0.006298    time: 0.3641  last_time: 0.4261  data_time: 0.0271  last_data_time: 0.0312   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:57:40 d2.utils.events]: [0m eta: 0:10:13  iter: 8099  total_loss: 0.1205  loss_cls: 0.03621  loss_box_reg: 0.06313  loss_rpn_cls: 0.004558  loss_rpn_loc: 0.007414    time: 0.3642  last_time: 0.3981  data_time: 0.0258  last_data_time: 0.0371   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:57:49 d2.utils.events]: [0m eta: 0:10:07  iter: 8119  total_loss: 0.1282  loss_cls: 0.0427  loss_box_reg: 0.07768  loss_rpn_cls: 0.002579  loss_rpn_loc: 0.005967    time: 0.3643  last_time: 0.4230  data_time: 0.0298  last_data_time: 0.0092   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:57:57 d2.utils.events]: [0m eta: 0:10:02  iter: 8139  total_loss: 0.1338  loss_cls: 0.04513  loss_box_reg: 0.07363  loss_rpn_cls: 0.00298  loss_rpn_loc: 0.006365    time: 0.3644  last_time: 0.4393  data_time: 0.0291  last_data_time: 0.0258   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:58:05 d2.utils.events]: [0m eta: 0:09:57  iter: 8159  total_loss: 0.1172  loss_cls: 0.03952  loss_box_reg: 0.07199  loss_rpn_cls: 0.003068  loss_rpn_loc: 0.006171    time: 0.3645  last_time: 0.3420  data_time: 0.0271  last_data_time: 0.0098   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:58:13 d2.utils.events]: [0m eta: 0:09:52  iter: 8179  total_loss: 0.1336  loss_cls: 0.04331  loss_box_reg: 0.07795  loss_rpn_cls: 0.003378  loss_rpn_loc: 0.005654    time: 0.3646  last_time: 0.4161  data_time: 0.0268  last_data_time: 0.0303   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:58:21 d2.utils.events]: [0m eta: 0:09:47  iter: 8199  total_loss: 0.1354  loss_cls: 0.04242  loss_box_reg: 0.07514  loss_rpn_cls: 0.003907  loss_rpn_loc: 0.008003    time: 0.3647  last_time: 0.4139  data_time: 0.0292  last_data_time: 0.0064   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:58:29 d2.utils.events]: [0m eta: 0:09:41  iter: 8219  total_loss: 0.141  loss_cls: 0.04657  loss_box_reg: 0.08368  loss_rpn_cls: 0.002732  loss_rpn_loc: 0.005752    time: 0.3648  last_time: 0.4019  data_time: 0.0258  last_data_time: 0.0218   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:58:37 d2.utils.events]: [0m eta: 0:09:36  iter: 8239  total_loss: 0.1421  loss_cls: 0.04289  loss_box_reg: 0.08082  loss_rpn_cls: 0.004842  loss_rpn_loc: 0.008806    time: 0.3649  last_time: 0.3950  data_time: 0.0297  last_data_time: 0.0551   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:58:45 d2.utils.events]: [0m eta: 0:09:31  iter: 8259  total_loss: 0.1444  loss_cls: 0.04329  loss_box_reg: 0.08852  loss_rpn_cls: 0.004006  loss_rpn_loc: 0.008077    time: 0.3649  last_time: 0.3032  data_time: 0.0289  last_data_time: 0.0056   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:58:53 d2.utils.events]: [0m eta: 0:09:26  iter: 8279  total_loss: 0.1431  loss_cls: 0.0434  loss_box_reg: 0.08812  loss_rpn_cls: 0.003559  loss_rpn_loc: 0.008935    time: 0.3650  last_time: 0.3271  data_time: 0.0283  last_data_time: 0.0150   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:59:01 d2.utils.events]: [0m eta: 0:09:22  iter: 8299  total_loss: 0.13  loss_cls: 0.04314  loss_box_reg: 0.07636  loss_rpn_cls: 0.003844  loss_rpn_loc: 0.008035    time: 0.3651  last_time: 0.3812  data_time: 0.0265  last_data_time: 0.0217   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:59:09 d2.utils.events]: [0m eta: 0:09:17  iter: 8319  total_loss: 0.1192  loss_cls: 0.03891  loss_box_reg: 0.07101  loss_rpn_cls: 0.004096  loss_rpn_loc: 0.006298    time: 0.3652  last_time: 0.4554  data_time: 0.0282  last_data_time: 0.0080   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:59:17 d2.utils.events]: [0m eta: 0:09:13  iter: 8339  total_loss: 0.1207  loss_cls: 0.03888  loss_box_reg: 0.06527  loss_rpn_cls: 0.00415  loss_rpn_loc: 0.008003    time: 0.3653  last_time: 0.4090  data_time: 0.0291  last_data_time: 0.0359   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:59:25 d2.utils.events]: [0m eta: 0:09:09  iter: 8359  total_loss: 0.1306  loss_cls: 0.04231  loss_box_reg: 0.0747  loss_rpn_cls: 0.003659  loss_rpn_loc: 0.006721    time: 0.3653  last_time: 0.3881  data_time: 0.0356  last_data_time: 0.0045   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:59:32 d2.utils.events]: [0m eta: 0:09:04  iter: 8379  total_loss: 0.1292  loss_cls: 0.045  loss_box_reg: 0.07387  loss_rpn_cls: 0.003807  loss_rpn_loc: 0.006325    time: 0.3654  last_time: 0.3979  data_time: 0.0381  last_data_time: 0.0312   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:59:40 d2.utils.events]: [0m eta: 0:08:58  iter: 8399  total_loss: 0.124  loss_cls: 0.03936  loss_box_reg: 0.0706  loss_rpn_cls: 0.002688  loss_rpn_loc: 0.006229    time: 0.3654  last_time: 0.3781  data_time: 0.0328  last_data_time: 0.0455   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:59:48 d2.utils.events]: [0m eta: 0:08:51  iter: 8419  total_loss: 0.1314  loss_cls: 0.03849  loss_box_reg: 0.08305  loss_rpn_cls: 0.003497  loss_rpn_loc: 0.005974    time: 0.3655  last_time: 0.3619  data_time: 0.0376  last_data_time: 0.0033   lr: 0.0025  max_mem: 8015M
[32m[11/11 22:59:55 d2.utils.events]: [0m eta: 0:08:44  iter: 8439  total_loss: 0.1294  loss_cls: 0.04135  loss_box_reg: 0.07208  loss_rpn_cls: 0.003983  loss_rpn_loc: 0.006609    time: 0.3655  last_time: 0.4097  data_time: 0.0294  last_data_time: 0.0185   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:00:03 d2.utils.events]: [0m eta: 0:08:37  iter: 8459  total_loss: 0.1178  loss_cls: 0.03611  loss_box_reg: 0.07101  loss_rpn_cls: 0.003158  loss_rpn_loc: 0.006822    time: 0.3655  last_time: 0.4040  data_time: 0.0336  last_data_time: 0.0763   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:00:10 d2.utils.events]: [0m eta: 0:08:31  iter: 8479  total_loss: 0.1136  loss_cls: 0.03747  loss_box_reg: 0.06336  loss_rpn_cls: 0.002245  loss_rpn_loc: 0.005453    time: 0.3655  last_time: 0.3226  data_time: 0.0321  last_data_time: 0.0152   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:00:18 d2.utils.events]: [0m eta: 0:08:26  iter: 8499  total_loss: 0.1196  loss_cls: 0.0378  loss_box_reg: 0.06863  loss_rpn_cls: 0.003039  loss_rpn_loc: 0.005323    time: 0.3656  last_time: 0.3725  data_time: 0.0309  last_data_time: 0.0276   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:00:25 d2.utils.events]: [0m eta: 0:08:21  iter: 8519  total_loss: 0.1164  loss_cls: 0.03958  loss_box_reg: 0.06555  loss_rpn_cls: 0.003025  loss_rpn_loc: 0.00465    time: 0.3656  last_time: 0.3379  data_time: 0.0294  last_data_time: 0.0039   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:00:33 d2.utils.events]: [0m eta: 0:08:17  iter: 8539  total_loss: 0.1227  loss_cls: 0.04267  loss_box_reg: 0.07246  loss_rpn_cls: 0.003225  loss_rpn_loc: 0.005701    time: 0.3656  last_time: 0.3465  data_time: 0.0328  last_data_time: 0.0442   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:00:40 d2.utils.events]: [0m eta: 0:08:13  iter: 8559  total_loss: 0.138  loss_cls: 0.04246  loss_box_reg: 0.08059  loss_rpn_cls: 0.004025  loss_rpn_loc: 0.007733    time: 0.3656  last_time: 0.3596  data_time: 0.0298  last_data_time: 0.0045   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:00:48 d2.utils.events]: [0m eta: 0:08:08  iter: 8579  total_loss: 0.1214  loss_cls: 0.03704  loss_box_reg: 0.07037  loss_rpn_cls: 0.003378  loss_rpn_loc: 0.006885    time: 0.3656  last_time: 0.3671  data_time: 0.0342  last_data_time: 0.0150   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:00:55 d2.utils.events]: [0m eta: 0:08:04  iter: 8599  total_loss: 0.1224  loss_cls: 0.04349  loss_box_reg: 0.07104  loss_rpn_cls: 0.003328  loss_rpn_loc: 0.007497    time: 0.3656  last_time: 0.3448  data_time: 0.0307  last_data_time: 0.0121   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:01:03 d2.utils.events]: [0m eta: 0:08:01  iter: 8619  total_loss: 0.1222  loss_cls: 0.03961  loss_box_reg: 0.07031  loss_rpn_cls: 0.003915  loss_rpn_loc: 0.005137    time: 0.3657  last_time: 0.3736  data_time: 0.0281  last_data_time: 0.0292   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:01:10 d2.utils.events]: [0m eta: 0:07:55  iter: 8639  total_loss: 0.1211  loss_cls: 0.03793  loss_box_reg: 0.06895  loss_rpn_cls: 0.003738  loss_rpn_loc: 0.006148    time: 0.3657  last_time: 0.3675  data_time: 0.0315  last_data_time: 0.0120   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:01:18 d2.utils.events]: [0m eta: 0:07:53  iter: 8659  total_loss: 0.1436  loss_cls: 0.04819  loss_box_reg: 0.08512  loss_rpn_cls: 0.003144  loss_rpn_loc: 0.00639    time: 0.3657  last_time: 0.3869  data_time: 0.0364  last_data_time: 0.0380   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:01:25 d2.utils.events]: [0m eta: 0:07:49  iter: 8679  total_loss: 0.1248  loss_cls: 0.04012  loss_box_reg: 0.07003  loss_rpn_cls: 0.003633  loss_rpn_loc: 0.007252    time: 0.3657  last_time: 0.3280  data_time: 0.0393  last_data_time: 0.0047   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:01:33 d2.utils.events]: [0m eta: 0:07:45  iter: 8699  total_loss: 0.1263  loss_cls: 0.04317  loss_box_reg: 0.07917  loss_rpn_cls: 0.00267  loss_rpn_loc: 0.006169    time: 0.3657  last_time: 0.3841  data_time: 0.0356  last_data_time: 0.0334   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:01:40 d2.utils.events]: [0m eta: 0:07:40  iter: 8719  total_loss: 0.1268  loss_cls: 0.0404  loss_box_reg: 0.0761  loss_rpn_cls: 0.0033  loss_rpn_loc: 0.005966    time: 0.3657  last_time: 0.3133  data_time: 0.0353  last_data_time: 0.0183   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:01:47 d2.utils.events]: [0m eta: 0:07:36  iter: 8739  total_loss: 0.1416  loss_cls: 0.04893  loss_box_reg: 0.08572  loss_rpn_cls: 0.003905  loss_rpn_loc: 0.006914    time: 0.3658  last_time: 0.3765  data_time: 0.0300  last_data_time: 0.0281   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:01:55 d2.utils.events]: [0m eta: 0:07:31  iter: 8759  total_loss: 0.124  loss_cls: 0.04151  loss_box_reg: 0.07564  loss_rpn_cls: 0.004366  loss_rpn_loc: 0.006796    time: 0.3658  last_time: 0.3804  data_time: 0.0365  last_data_time: 0.0398   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:02:03 d2.utils.events]: [0m eta: 0:07:27  iter: 8779  total_loss: 0.1242  loss_cls: 0.043  loss_box_reg: 0.07035  loss_rpn_cls: 0.003133  loss_rpn_loc: 0.008422    time: 0.3658  last_time: 0.3371  data_time: 0.0341  last_data_time: 0.0054   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:02:10 d2.utils.events]: [0m eta: 0:07:21  iter: 8799  total_loss: 0.1183  loss_cls: 0.03789  loss_box_reg: 0.06211  loss_rpn_cls: 0.003578  loss_rpn_loc: 0.006307    time: 0.3658  last_time: 0.3696  data_time: 0.0355  last_data_time: 0.0233   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:02:17 d2.utils.events]: [0m eta: 0:07:15  iter: 8819  total_loss: 0.1199  loss_cls: 0.03839  loss_box_reg: 0.07008  loss_rpn_cls: 0.003214  loss_rpn_loc: 0.005771    time: 0.3658  last_time: 0.3846  data_time: 0.0360  last_data_time: 0.0106   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:02:25 d2.utils.events]: [0m eta: 0:07:09  iter: 8839  total_loss: 0.1239  loss_cls: 0.0431  loss_box_reg: 0.07072  loss_rpn_cls: 0.002058  loss_rpn_loc: 0.005463    time: 0.3659  last_time: 0.3729  data_time: 0.0303  last_data_time: 0.0234   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:02:32 d2.utils.events]: [0m eta: 0:07:04  iter: 8859  total_loss: 0.112  loss_cls: 0.03372  loss_box_reg: 0.06782  loss_rpn_cls: 0.003146  loss_rpn_loc: 0.007026    time: 0.3659  last_time: 0.3448  data_time: 0.0311  last_data_time: 0.0205   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:02:40 d2.utils.events]: [0m eta: 0:06:57  iter: 8879  total_loss: 0.1192  loss_cls: 0.042  loss_box_reg: 0.07255  loss_rpn_cls: 0.003035  loss_rpn_loc: 0.00625    time: 0.3659  last_time: 0.3268  data_time: 0.0316  last_data_time: 0.0360   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:02:48 d2.utils.events]: [0m eta: 0:06:52  iter: 8899  total_loss: 0.1316  loss_cls: 0.04206  loss_box_reg: 0.07061  loss_rpn_cls: 0.003106  loss_rpn_loc: 0.006526    time: 0.3659  last_time: 0.4102  data_time: 0.0327  last_data_time: 0.0627   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:02:55 d2.utils.events]: [0m eta: 0:06:45  iter: 8919  total_loss: 0.1221  loss_cls: 0.04131  loss_box_reg: 0.07139  loss_rpn_cls: 0.00271  loss_rpn_loc: 0.006154    time: 0.3660  last_time: 0.4041  data_time: 0.0304  last_data_time: 0.0687   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:03:03 d2.utils.events]: [0m eta: 0:06:39  iter: 8939  total_loss: 0.1209  loss_cls: 0.04262  loss_box_reg: 0.06883  loss_rpn_cls: 0.00357  loss_rpn_loc: 0.006842    time: 0.3660  last_time: 0.4083  data_time: 0.0304  last_data_time: 0.0572   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:03:10 d2.utils.events]: [0m eta: 0:06:32  iter: 8959  total_loss: 0.1086  loss_cls: 0.03813  loss_box_reg: 0.06386  loss_rpn_cls: 0.002611  loss_rpn_loc: 0.005182    time: 0.3660  last_time: 0.3767  data_time: 0.0354  last_data_time: 0.0328   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:03:17 d2.utils.events]: [0m eta: 0:06:24  iter: 8979  total_loss: 0.1339  loss_cls: 0.04517  loss_box_reg: 0.07666  loss_rpn_cls: 0.002837  loss_rpn_loc: 0.007378    time: 0.3660  last_time: 0.3782  data_time: 0.0362  last_data_time: 0.0131   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:03:26 d2.data.datasets.coco]: [0mLoaded 177 images in COCO format from ../datasets/coco/annotations/dog_instances_val2017.json
[32m[11/11 23:03:26 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/11 23:03:26 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[32m[11/11 23:03:26 d2.data.common]: [0mSerializing 177 elements to byte tensors and concatenating them all ...
[32m[11/11 23:03:26 d2.data.common]: [0mSerialized dataset takes 0.24 MiB
[5m[31mWARNING[0m [32m[11/11 23:03:26 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/11 23:03:26 d2.utils.events]: [0m eta: 0:06:18  iter: 8999  total_loss: 0.117  loss_cls: 0.0408  loss_box_reg: 0.06259  loss_rpn_cls: 0.003102  loss_rpn_loc: 0.007103    time: 0.3660  last_time: 0.3959  data_time: 0.0358  last_data_time: 0.0179   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:03:33 d2.utils.events]: [0m eta: 0:06:11  iter: 9019  total_loss: 0.1196  loss_cls: 0.03944  loss_box_reg: 0.07126  loss_rpn_cls: 0.00329  loss_rpn_loc: 0.006808    time: 0.3660  last_time: 0.3415  data_time: 0.0281  last_data_time: 0.0153   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:03:41 d2.utils.events]: [0m eta: 0:06:05  iter: 9039  total_loss: 0.1297  loss_cls: 0.04339  loss_box_reg: 0.07414  loss_rpn_cls: 0.003601  loss_rpn_loc: 0.00689    time: 0.3661  last_time: 0.4233  data_time: 0.0385  last_data_time: 0.0401   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:03:48 d2.utils.events]: [0m eta: 0:05:58  iter: 9059  total_loss: 0.1143  loss_cls: 0.03556  loss_box_reg: 0.06965  loss_rpn_cls: 0.00434  loss_rpn_loc: 0.007745    time: 0.3661  last_time: 0.3676  data_time: 0.0285  last_data_time: 0.0601   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:03:56 d2.utils.events]: [0m eta: 0:05:49  iter: 9079  total_loss: 0.1224  loss_cls: 0.04037  loss_box_reg: 0.07243  loss_rpn_cls: 0.003749  loss_rpn_loc: 0.005864    time: 0.3661  last_time: 0.3572  data_time: 0.0315  last_data_time: 0.0394   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:04:03 d2.utils.events]: [0m eta: 0:05:41  iter: 9099  total_loss: 0.1186  loss_cls: 0.03833  loss_box_reg: 0.07034  loss_rpn_cls: 0.003504  loss_rpn_loc: 0.006884    time: 0.3661  last_time: 0.3399  data_time: 0.0300  last_data_time: 0.0267   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:04:10 d2.utils.events]: [0m eta: 0:05:33  iter: 9119  total_loss: 0.1287  loss_cls: 0.04222  loss_box_reg: 0.07484  loss_rpn_cls: 0.004197  loss_rpn_loc: 0.009874    time: 0.3661  last_time: 0.3866  data_time: 0.0321  last_data_time: 0.0183   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:04:18 d2.utils.events]: [0m eta: 0:05:25  iter: 9139  total_loss: 0.1316  loss_cls: 0.03956  loss_box_reg: 0.07578  loss_rpn_cls: 0.003257  loss_rpn_loc: 0.005972    time: 0.3662  last_time: 0.3089  data_time: 0.0372  last_data_time: 0.0303   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:04:25 d2.utils.events]: [0m eta: 0:05:17  iter: 9159  total_loss: 0.1088  loss_cls: 0.03381  loss_box_reg: 0.06873  loss_rpn_cls: 0.002268  loss_rpn_loc: 0.005082    time: 0.3662  last_time: 0.3737  data_time: 0.0331  last_data_time: 0.0085   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:04:33 d2.utils.events]: [0m eta: 0:05:09  iter: 9179  total_loss: 0.1336  loss_cls: 0.04242  loss_box_reg: 0.08167  loss_rpn_cls: 0.003053  loss_rpn_loc: 0.006178    time: 0.3662  last_time: 0.4137  data_time: 0.0307  last_data_time: 0.0761   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:04:40 d2.utils.events]: [0m eta: 0:05:01  iter: 9199  total_loss: 0.1217  loss_cls: 0.04089  loss_box_reg: 0.07039  loss_rpn_cls: 0.002698  loss_rpn_loc: 0.005764    time: 0.3662  last_time: 0.3241  data_time: 0.0326  last_data_time: 0.0078   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:04:48 d2.utils.events]: [0m eta: 0:04:54  iter: 9219  total_loss: 0.1422  loss_cls: 0.04187  loss_box_reg: 0.07868  loss_rpn_cls: 0.003681  loss_rpn_loc: 0.004957    time: 0.3662  last_time: 0.3937  data_time: 0.0367  last_data_time: 0.0168   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:04:55 d2.utils.events]: [0m eta: 0:04:46  iter: 9239  total_loss: 0.1336  loss_cls: 0.04764  loss_box_reg: 0.07556  loss_rpn_cls: 0.00379  loss_rpn_loc: 0.007949    time: 0.3662  last_time: 0.3804  data_time: 0.0279  last_data_time: 0.0308   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:05:03 d2.utils.events]: [0m eta: 0:04:38  iter: 9259  total_loss: 0.111  loss_cls: 0.03719  loss_box_reg: 0.0661  loss_rpn_cls: 0.002888  loss_rpn_loc: 0.006633    time: 0.3663  last_time: 0.3494  data_time: 0.0327  last_data_time: 0.0140   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:05:10 d2.utils.events]: [0m eta: 0:04:31  iter: 9279  total_loss: 0.1106  loss_cls: 0.03532  loss_box_reg: 0.06892  loss_rpn_cls: 0.003387  loss_rpn_loc: 0.006234    time: 0.3663  last_time: 0.3483  data_time: 0.0337  last_data_time: 0.0061   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:05:18 d2.utils.events]: [0m eta: 0:04:23  iter: 9299  total_loss: 0.1268  loss_cls: 0.03978  loss_box_reg: 0.07232  loss_rpn_cls: 0.003489  loss_rpn_loc: 0.006469    time: 0.3663  last_time: 0.3248  data_time: 0.0323  last_data_time: 0.0068   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:05:25 d2.utils.events]: [0m eta: 0:04:16  iter: 9319  total_loss: 0.1356  loss_cls: 0.04261  loss_box_reg: 0.0791  loss_rpn_cls: 0.002959  loss_rpn_loc: 0.005714    time: 0.3663  last_time: 0.3158  data_time: 0.0309  last_data_time: 0.0467   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:05:33 d2.utils.events]: [0m eta: 0:04:08  iter: 9339  total_loss: 0.1076  loss_cls: 0.03369  loss_box_reg: 0.06494  loss_rpn_cls: 0.002822  loss_rpn_loc: 0.006755    time: 0.3663  last_time: 0.3214  data_time: 0.0357  last_data_time: 0.0489   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:05:40 d2.utils.events]: [0m eta: 0:04:00  iter: 9359  total_loss: 0.136  loss_cls: 0.04201  loss_box_reg: 0.08355  loss_rpn_cls: 0.003625  loss_rpn_loc: 0.006475    time: 0.3663  last_time: 0.3361  data_time: 0.0336  last_data_time: 0.0207   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:05:48 d2.utils.events]: [0m eta: 0:03:53  iter: 9379  total_loss: 0.117  loss_cls: 0.03861  loss_box_reg: 0.06868  loss_rpn_cls: 0.002409  loss_rpn_loc: 0.006823    time: 0.3663  last_time: 0.4117  data_time: 0.0294  last_data_time: 0.0328   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:05:55 d2.utils.events]: [0m eta: 0:03:45  iter: 9399  total_loss: 0.1227  loss_cls: 0.04045  loss_box_reg: 0.07206  loss_rpn_cls: 0.003398  loss_rpn_loc: 0.00546    time: 0.3664  last_time: 0.4005  data_time: 0.0345  last_data_time: 0.0474   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:06:03 d2.utils.events]: [0m eta: 0:03:37  iter: 9419  total_loss: 0.1068  loss_cls: 0.03132  loss_box_reg: 0.0625  loss_rpn_cls: 0.002698  loss_rpn_loc: 0.005183    time: 0.3664  last_time: 0.3334  data_time: 0.0317  last_data_time: 0.0131   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:06:10 d2.utils.events]: [0m eta: 0:03:29  iter: 9439  total_loss: 0.1166  loss_cls: 0.035  loss_box_reg: 0.07402  loss_rpn_cls: 0.002372  loss_rpn_loc: 0.005864    time: 0.3664  last_time: 0.4037  data_time: 0.0385  last_data_time: 0.0564   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:06:18 d2.utils.events]: [0m eta: 0:03:22  iter: 9459  total_loss: 0.1432  loss_cls: 0.04571  loss_box_reg: 0.08904  loss_rpn_cls: 0.003867  loss_rpn_loc: 0.008193    time: 0.3665  last_time: 0.3063  data_time: 0.0355  last_data_time: 0.0240   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:06:26 d2.utils.events]: [0m eta: 0:03:14  iter: 9479  total_loss: 0.1208  loss_cls: 0.04018  loss_box_reg: 0.06833  loss_rpn_cls: 0.003066  loss_rpn_loc: 0.00562    time: 0.3665  last_time: 0.3785  data_time: 0.0335  last_data_time: 0.0103   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:06:33 d2.utils.events]: [0m eta: 0:03:07  iter: 9499  total_loss: 0.12  loss_cls: 0.03667  loss_box_reg: 0.06412  loss_rpn_cls: 0.003994  loss_rpn_loc: 0.006634    time: 0.3665  last_time: 0.4223  data_time: 0.0332  last_data_time: 0.0604   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:06:40 d2.utils.events]: [0m eta: 0:02:59  iter: 9519  total_loss: 0.1249  loss_cls: 0.04095  loss_box_reg: 0.06939  loss_rpn_cls: 0.00258  loss_rpn_loc: 0.004919    time: 0.3665  last_time: 0.3690  data_time: 0.0320  last_data_time: 0.0093   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:06:48 d2.utils.events]: [0m eta: 0:02:52  iter: 9539  total_loss: 0.1424  loss_cls: 0.04374  loss_box_reg: 0.08594  loss_rpn_cls: 0.003297  loss_rpn_loc: 0.006513    time: 0.3665  last_time: 0.3774  data_time: 0.0357  last_data_time: 0.0434   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:06:56 d2.utils.events]: [0m eta: 0:02:45  iter: 9559  total_loss: 0.1227  loss_cls: 0.03624  loss_box_reg: 0.06877  loss_rpn_cls: 0.002608  loss_rpn_loc: 0.006972    time: 0.3666  last_time: 0.3885  data_time: 0.0370  last_data_time: 0.0043   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:07:03 d2.utils.events]: [0m eta: 0:02:37  iter: 9579  total_loss: 0.125  loss_cls: 0.03796  loss_box_reg: 0.076  loss_rpn_cls: 0.002901  loss_rpn_loc: 0.006422    time: 0.3666  last_time: 0.3470  data_time: 0.0334  last_data_time: 0.0337   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:07:11 d2.utils.events]: [0m eta: 0:02:30  iter: 9599  total_loss: 0.1192  loss_cls: 0.03682  loss_box_reg: 0.06787  loss_rpn_cls: 0.002773  loss_rpn_loc: 0.006929    time: 0.3666  last_time: 0.4617  data_time: 0.0367  last_data_time: 0.0592   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:07:19 d2.utils.events]: [0m eta: 0:02:23  iter: 9619  total_loss: 0.1236  loss_cls: 0.04077  loss_box_reg: 0.06919  loss_rpn_cls: 0.003607  loss_rpn_loc: 0.006385    time: 0.3667  last_time: 0.4325  data_time: 0.0342  last_data_time: 0.0337   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:07:26 d2.utils.events]: [0m eta: 0:02:15  iter: 9639  total_loss: 0.1285  loss_cls: 0.04105  loss_box_reg: 0.07891  loss_rpn_cls: 0.002966  loss_rpn_loc: 0.007584    time: 0.3667  last_time: 0.4096  data_time: 0.0308  last_data_time: 0.0469   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:07:34 d2.utils.events]: [0m eta: 0:02:08  iter: 9659  total_loss: 0.1152  loss_cls: 0.04342  loss_box_reg: 0.06397  loss_rpn_cls: 0.003436  loss_rpn_loc: 0.005541    time: 0.3667  last_time: 0.3787  data_time: 0.0322  last_data_time: 0.0379   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:07:41 d2.utils.events]: [0m eta: 0:02:00  iter: 9679  total_loss: 0.1284  loss_cls: 0.04051  loss_box_reg: 0.07194  loss_rpn_cls: 0.002379  loss_rpn_loc: 0.006813    time: 0.3667  last_time: 0.4010  data_time: 0.0319  last_data_time: 0.0299   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:07:49 d2.utils.events]: [0m eta: 0:01:52  iter: 9699  total_loss: 0.1168  loss_cls: 0.03941  loss_box_reg: 0.07015  loss_rpn_cls: 0.003851  loss_rpn_loc: 0.005884    time: 0.3667  last_time: 0.3660  data_time: 0.0352  last_data_time: 0.0456   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:07:57 d2.utils.events]: [0m eta: 0:01:45  iter: 9719  total_loss: 0.1264  loss_cls: 0.04298  loss_box_reg: 0.07436  loss_rpn_cls: 0.002684  loss_rpn_loc: 0.005327    time: 0.3668  last_time: 0.4120  data_time: 0.0398  last_data_time: 0.0623   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:08:04 d2.utils.events]: [0m eta: 0:01:37  iter: 9739  total_loss: 0.1222  loss_cls: 0.04451  loss_box_reg: 0.06638  loss_rpn_cls: 0.004708  loss_rpn_loc: 0.007435    time: 0.3668  last_time: 0.4366  data_time: 0.0338  last_data_time: 0.0759   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:08:12 d2.utils.events]: [0m eta: 0:01:30  iter: 9759  total_loss: 0.115  loss_cls: 0.03569  loss_box_reg: 0.06676  loss_rpn_cls: 0.003823  loss_rpn_loc: 0.005744    time: 0.3668  last_time: 0.3441  data_time: 0.0285  last_data_time: 0.0277   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:08:19 d2.utils.events]: [0m eta: 0:01:22  iter: 9779  total_loss: 0.126  loss_cls: 0.04306  loss_box_reg: 0.07159  loss_rpn_cls: 0.002082  loss_rpn_loc: 0.006943    time: 0.3668  last_time: 0.3897  data_time: 0.0355  last_data_time: 0.0085   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:08:27 d2.utils.events]: [0m eta: 0:01:15  iter: 9799  total_loss: 0.1236  loss_cls: 0.04325  loss_box_reg: 0.07614  loss_rpn_cls: 0.003301  loss_rpn_loc: 0.007152    time: 0.3669  last_time: 0.3169  data_time: 0.0385  last_data_time: 0.0136   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:08:35 d2.utils.events]: [0m eta: 0:01:07  iter: 9819  total_loss: 0.1145  loss_cls: 0.03666  loss_box_reg: 0.06683  loss_rpn_cls: 0.004205  loss_rpn_loc: 0.006203    time: 0.3669  last_time: 0.3590  data_time: 0.0359  last_data_time: 0.0100   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:08:42 d2.utils.events]: [0m eta: 0:01:00  iter: 9839  total_loss: 0.1174  loss_cls: 0.03722  loss_box_reg: 0.07092  loss_rpn_cls: 0.002441  loss_rpn_loc: 0.00537    time: 0.3669  last_time: 0.3575  data_time: 0.0273  last_data_time: 0.0046   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:08:49 d2.utils.events]: [0m eta: 0:00:52  iter: 9859  total_loss: 0.122  loss_cls: 0.04246  loss_box_reg: 0.06668  loss_rpn_cls: 0.003155  loss_rpn_loc: 0.005563    time: 0.3669  last_time: 0.4220  data_time: 0.0358  last_data_time: 0.0694   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:08:57 d2.utils.events]: [0m eta: 0:00:45  iter: 9879  total_loss: 0.1171  loss_cls: 0.0378  loss_box_reg: 0.06561  loss_rpn_cls: 0.002845  loss_rpn_loc: 0.006011    time: 0.3669  last_time: 0.4119  data_time: 0.0334  last_data_time: 0.0509   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:09:04 d2.utils.events]: [0m eta: 0:00:37  iter: 9899  total_loss: 0.1315  loss_cls: 0.04222  loss_box_reg: 0.07936  loss_rpn_cls: 0.002207  loss_rpn_loc: 0.007045    time: 0.3669  last_time: 0.4086  data_time: 0.0302  last_data_time: 0.0508   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:09:12 d2.utils.events]: [0m eta: 0:00:30  iter: 9919  total_loss: 0.1089  loss_cls: 0.03455  loss_box_reg: 0.06447  loss_rpn_cls: 0.003686  loss_rpn_loc: 0.006198    time: 0.3670  last_time: 0.4163  data_time: 0.0320  last_data_time: 0.0301   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:09:19 d2.utils.events]: [0m eta: 0:00:22  iter: 9939  total_loss: 0.1159  loss_cls: 0.03462  loss_box_reg: 0.06929  loss_rpn_cls: 0.003021  loss_rpn_loc: 0.004861    time: 0.3670  last_time: 0.3400  data_time: 0.0353  last_data_time: 0.0077   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:09:27 d2.utils.events]: [0m eta: 0:00:15  iter: 9959  total_loss: 0.1111  loss_cls: 0.0341  loss_box_reg: 0.06426  loss_rpn_cls: 0.004619  loss_rpn_loc: 0.00791    time: 0.3670  last_time: 0.4115  data_time: 0.0386  last_data_time: 0.0555   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:09:34 d2.utils.events]: [0m eta: 0:00:07  iter: 9979  total_loss: 0.1272  loss_cls: 0.04117  loss_box_reg: 0.07565  loss_rpn_cls: 0.002973  loss_rpn_loc: 0.00567    time: 0.3670  last_time: 0.4243  data_time: 0.0376  last_data_time: 0.0400   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:09:43 d2.utils.events]: [0m eta: 0:00:00  iter: 9999  total_loss: 0.1192  loss_cls: 0.03786  loss_box_reg: 0.06826  loss_rpn_cls: 0.0026  loss_rpn_loc: 0.005246    time: 0.3671  last_time: 0.3980  data_time: 0.0338  last_data_time: 0.0359   lr: 0.0025  max_mem: 8015M
[32m[11/11 23:09:43 d2.engine.hooks]: [0mOverall training speed: 9998 iterations in 1:01:09 (0.3671 s / it)
[32m[11/11 23:09:43 d2.engine.hooks]: [0mTotal training time: 1:01:20 (0:00:10 on hooks)
[32m[11/11 23:09:43 d2.data.datasets.coco]: [0mLoaded 177 images in COCO format from ../datasets/coco/annotations/dog_instances_val2017.json
[32m[11/11 23:09:43 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/11 23:09:43 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[32m[11/11 23:09:43 d2.data.common]: [0mSerializing 177 elements to byte tensors and concatenating them all ...
[32m[11/11 23:09:43 d2.data.common]: [0mSerialized dataset takes 0.24 MiB
[5m[31mWARNING[0m [32m[11/11 23:09:43 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
>>> from detectron2.evaluation import COCOEvaluator, inference_on_dataset
>>> from detectron2.data import build_detection_test_loader
>>> trainer.model.eval()
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
  )
)
>>> evaluator = COCOEvaluator("coco_val_dog", ("bbox",), False, output_dir="./knize/output/dog_11-11")[1P")[1P")[1P")[1P")[1P")2")0")2")4")1")1")1")1")
[32m[11/12 06:18:29 d2.evaluation.coco_evaluation]: [0mFast COCO eval is not built. Falling back to official COCO eval.
>>> val_loader = build_detection_test_loader(cfg, "coco_val_dog")
[32m[11/12 06:18:35 d2.data.datasets.coco]: [0mLoaded 177 images in COCO format from ../datasets/coco/annotations/dog_instances_val2017.json
[32m[11/12 06:18:35 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/12 06:18:35 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[32m[11/12 06:18:35 d2.data.common]: [0mSerializing 177 elements to byte tensors and concatenating them all ...
[32m[11/12 06:18:35 d2.data.common]: [0mSerialized dataset takes 0.24 MiB
>>> 
KeyboardInterrupt
>>> print(inference_on_dataset(trainer.model, val_loader, evaluator))
[32m[11/12 06:18:44 d2.evaluation.evaluator]: [0mStart inference on 177 batches
[32m[11/12 06:18:45 d2.evaluation.evaluator]: [0mInference done 11/177. Dataloading: 0.0009 s/iter. Inference: 0.0783 s/iter. Eval: 0.0002 s/iter. Total: 0.0793 s/iter. ETA=0:00:13
[32m[11/12 06:18:50 d2.evaluation.evaluator]: [0mInference done 78/177. Dataloading: 0.0011 s/iter. Inference: 0.0743 s/iter. Eval: 0.0002 s/iter. Total: 0.0756 s/iter. ETA=0:00:07
[32m[11/12 06:18:55 d2.evaluation.evaluator]: [0mInference done 139/177. Dataloading: 0.0013 s/iter. Inference: 0.0771 s/iter. Eval: 0.0002 s/iter. Total: 0.0787 s/iter. ETA=0:00:02
[32m[11/12 06:18:58 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:13.812115 (0.080303 s / iter per device, on 1 devices)
[32m[11/12 06:18:58 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:13 (0.077831 s / iter per device, on 1 devices)
[32m[11/12 06:18:58 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/12 06:18:58 d2.evaluation.coco_evaluation]: [0mSaving results to ./knize/output/dog_20241111/coco_instances_results.json
[32m[11/12 06:18:58 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with official COCO API...
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.08s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.543
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.836
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.598
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.366
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.579
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.555
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.522
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.619
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.619
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.389
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.624
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.649
[32m[11/12 06:18:58 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 54.333 | 83.596 | 59.753 | 36.573 | 57.885 | 55.533 |
OrderedDict([('bbox', {'AP': 54.33255441046503, 'AP50': 83.59619051547486, 'AP75': 59.752533777532236, 'APs': 36.57305730573057, 'APm': 57.885158586946, 'APl': 55.53258237332944})])
>>> print(inference_on_dataset(trainer.model, val_loader, evaluator))[C[C[C[C[Kexit
Use exit() or Ctrl-D (i.e. EOF) to exit
>>> exit()
e[01;32mjknize@aiscalar[00m:[01;34m~/main/repo/CSC578[00m$ e[Kexit
exit

Script done on 2024-11-12 06:31:14-06:00 [COMMAND_EXIT_CODE="0"]
